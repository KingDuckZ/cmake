/* This file was generated by ./entitiesGenerator.sh */
/* DO NOT EDIT! */
#ifndef ddeps_entities_h
#define ddeps_entities_h
#include <string>

// Translate HTML5 character entities into UTF-8 escapes
// ent is the name between the ampersand and the semicolon
std::string translateEntity(std::string const& ent)
{
  if(ent=="Aacute") return "\xC3\x81";
  if(ent=="aacute") return "\xC3\xA1";
  if(ent=="Abreve") return "\xC4\x82";
  if(ent=="abreve") return "\xC4\x83";
  if(ent=="ac") return "\xE2\x88\xBE";
  if(ent=="acd") return "\xE2\x88\xBF";
  if(ent=="acE") return "\xE2\x88\xBE\xCC\xB3";
  if(ent=="Acirc") return "\xC3\x82";
  if(ent=="acirc") return "\xC3\xA2";
  if(ent=="acute") return "\xC2\xB4";
  if(ent=="Acy") return "\xD0\x90";
  if(ent=="acy") return "\xD0\xB0";
  if(ent=="AElig") return "\xC3\x86";
  if(ent=="aelig") return "\xC3\xA6";
  if(ent=="af") return "\xE2\x81\xA1";
  if(ent=="Afr") return "\xED\xA0\xB5\xED\xB4\x84";
  if(ent=="afr") return "\xED\xA0\xB5\xED\xB4\x9E";
  if(ent=="Agrave") return "\xC3\x80";
  if(ent=="agrave") return "\xC3\xA0";
  if(ent=="alefsym") return "\xE2\x84\xB5";
  if(ent=="aleph") return "\xE2\x84\xB5";
  if(ent=="Alpha") return "\xCE\x91";
  if(ent=="alpha") return "\xCE\xB1";
  if(ent=="Amacr") return "\xC4\x80";
  if(ent=="amacr") return "\xC4\x81";
  if(ent=="amalg") return "\xE2\xA8\xBF";
  if(ent=="AMP") return "&";
  if(ent=="amp") return "&";
  if(ent=="And") return "\xE2\xA9\x93";
  if(ent=="and") return "\xE2\x88\xA7";
  if(ent=="andand") return "\xE2\xA9\x95";
  if(ent=="andd") return "\xE2\xA9\x9C";
  if(ent=="andslope") return "\xE2\xA9\x98";
  if(ent=="andv") return "\xE2\xA9\x9A";
  if(ent=="ang") return "\xE2\x88\xA0";
  if(ent=="ange") return "\xE2\xA6\xA4";
  if(ent=="angle") return "\xE2\x88\xA0";
  if(ent=="angmsd") return "\xE2\x88\xA1";
  if(ent=="angmsdaa") return "\xE2\xA6\xA8";
  if(ent=="angmsdab") return "\xE2\xA6\xA9";
  if(ent=="angmsdac") return "\xE2\xA6\xAA";
  if(ent=="angmsdad") return "\xE2\xA6\xAB";
  if(ent=="angmsdae") return "\xE2\xA6\xAC";
  if(ent=="angmsdaf") return "\xE2\xA6\xAD";
  if(ent=="angmsdag") return "\xE2\xA6\xAE";
  if(ent=="angmsdah") return "\xE2\xA6\xAF";
  if(ent=="angrt") return "\xE2\x88\x9F";
  if(ent=="angrtvb") return "\xE2\x8A\xBE";
  if(ent=="angrtvbd") return "\xE2\xA6\x9D";
  if(ent=="angsph") return "\xE2\x88\xA2";
  if(ent=="angst") return "\xC3\x85";
  if(ent=="angzarr") return "\xE2\x8D\xBC";
  if(ent=="Aogon") return "\xC4\x84";
  if(ent=="aogon") return "\xC4\x85";
  if(ent=="Aopf") return "\xED\xA0\xB5\xED\xB4\xB8";
  if(ent=="aopf") return "\xED\xA0\xB5\xED\xB5\x92";
  if(ent=="ap") return "\xE2\x89\x88";
  if(ent=="apacir") return "\xE2\xA9\xAF";
  if(ent=="apE") return "\xE2\xA9\xB0";
  if(ent=="ape") return "\xE2\x89\x8A";
  if(ent=="apid") return "\xE2\x89\x8B";
  if(ent=="apos") return "'";
  if(ent=="ApplyFunction") return "\xE2\x81\xA1";
  if(ent=="approx") return "\xE2\x89\x88";
  if(ent=="approxeq") return "\xE2\x89\x8A";
  if(ent=="Aring") return "\xC3\x85";
  if(ent=="aring") return "\xC3\xA5";
  if(ent=="Ascr") return "\xED\xA0\xB5\xED\xB2\x9C";
  if(ent=="ascr") return "\xED\xA0\xB5\xED\xB2\xB6";
  if(ent=="Assign") return "\xE2\x89\x94";
  if(ent=="ast") return "*";
  if(ent=="asymp") return "\xE2\x89\x88";
  if(ent=="asympeq") return "\xE2\x89\x8D";
  if(ent=="Atilde") return "\xC3\x83";
  if(ent=="atilde") return "\xC3\xA3";
  if(ent=="Auml") return "\xC3\x84";
  if(ent=="auml") return "\xC3\xA4";
  if(ent=="awconint") return "\xE2\x88\xB3";
  if(ent=="awint") return "\xE2\xA8\x91";
  if(ent=="backcong") return "\xE2\x89\x8C";
  if(ent=="backepsilon") return "\xCF\xB6";
  if(ent=="backprime") return "\xE2\x80\xB5";
  if(ent=="backsim") return "\xE2\x88\xBD";
  if(ent=="backsimeq") return "\xE2\x8B\x8D";
  if(ent=="Backslash") return "\xE2\x88\x96";
  if(ent=="Barv") return "\xE2\xAB\xA7";
  if(ent=="barvee") return "\xE2\x8A\xBD";
  if(ent=="Barwed") return "\xE2\x8C\x86";
  if(ent=="barwed") return "\xE2\x8C\x85";
  if(ent=="barwedge") return "\xE2\x8C\x85";
  if(ent=="bbrk") return "\xE2\x8E\xB5";
  if(ent=="bbrktbrk") return "\xE2\x8E\xB6";
  if(ent=="bcong") return "\xE2\x89\x8C";
  if(ent=="Bcy") return "\xD0\x91";
  if(ent=="bcy") return "\xD0\xB1";
  if(ent=="bdquo") return "\xE2\x80\x9E";
  if(ent=="becaus") return "\xE2\x88\xB5";
  if(ent=="Because") return "\xE2\x88\xB5";
  if(ent=="because") return "\xE2\x88\xB5";
  if(ent=="bemptyv") return "\xE2\xA6\xB0";
  if(ent=="bepsi") return "\xCF\xB6";
  if(ent=="bernou") return "\xE2\x84\xAC";
  if(ent=="Bernoullis") return "\xE2\x84\xAC";
  if(ent=="Beta") return "\xCE\x92";
  if(ent=="beta") return "\xCE\xB2";
  if(ent=="beth") return "\xE2\x84\xB6";
  if(ent=="between") return "\xE2\x89\xAC";
  if(ent=="Bfr") return "\xED\xA0\xB5\xED\xB4\x85";
  if(ent=="bfr") return "\xED\xA0\xB5\xED\xB4\x9F";
  if(ent=="bigcap") return "\xE2\x8B\x82";
  if(ent=="bigcirc") return "\xE2\x97\xAF";
  if(ent=="bigcup") return "\xE2\x8B\x83";
  if(ent=="bigodot") return "\xE2\xA8\x80";
  if(ent=="bigoplus") return "\xE2\xA8\x81";
  if(ent=="bigotimes") return "\xE2\xA8\x82";
  if(ent=="bigsqcup") return "\xE2\xA8\x86";
  if(ent=="bigstar") return "\xE2\x98\x85";
  if(ent=="bigtriangledown") return "\xE2\x96\xBD";
  if(ent=="bigtriangleup") return "\xE2\x96\xB3";
  if(ent=="biguplus") return "\xE2\xA8\x84";
  if(ent=="bigvee") return "\xE2\x8B\x81";
  if(ent=="bigwedge") return "\xE2\x8B\x80";
  if(ent=="bkarow") return "\xE2\xA4\x8D";
  if(ent=="blacklozenge") return "\xE2\xA7\xAB";
  if(ent=="blacksquare") return "\xE2\x96\xAA";
  if(ent=="blacktriangle") return "\xE2\x96\xB4";
  if(ent=="blacktriangledown") return "\xE2\x96\xBE";
  if(ent=="blacktriangleleft") return "\xE2\x97\x82";
  if(ent=="blacktriangleright") return "\xE2\x96\xB8";
  if(ent=="blank") return "\xE2\x90\xA3";
  if(ent=="blk12") return "\xE2\x96\x92";
  if(ent=="blk14") return "\xE2\x96\x91";
  if(ent=="blk34") return "\xE2\x96\x93";
  if(ent=="block") return "\xE2\x96\x88";
  if(ent=="bne") return "=\xE2\x83\xA5";
  if(ent=="bnequiv") return "\xE2\x89\xA1\xE2\x83\xA5";
  if(ent=="bNot") return "\xE2\xAB\xAD";
  if(ent=="bnot") return "\xE2\x8C\x90";
  if(ent=="Bopf") return "\xED\xA0\xB5\xED\xB4\xB9";
  if(ent=="bopf") return "\xED\xA0\xB5\xED\xB5\x93";
  if(ent=="bot") return "\xE2\x8A\xA5";
  if(ent=="bottom") return "\xE2\x8A\xA5";
  if(ent=="bowtie") return "\xE2\x8B\x88";
  if(ent=="boxbox") return "\xE2\xA7\x89";
  if(ent=="boxDL") return "\xE2\x95\x97";
  if(ent=="boxDl") return "\xE2\x95\x96";
  if(ent=="boxdL") return "\xE2\x95\x95";
  if(ent=="boxdl") return "\xE2\x94\x90";
  if(ent=="boxDR") return "\xE2\x95\x94";
  if(ent=="boxDr") return "\xE2\x95\x93";
  if(ent=="boxdR") return "\xE2\x95\x92";
  if(ent=="boxdr") return "\xE2\x94\x8C";
  if(ent=="boxH") return "\xE2\x95\x90";
  if(ent=="boxh") return "\xE2\x94\x80";
  if(ent=="boxHD") return "\xE2\x95\xA6";
  if(ent=="boxHd") return "\xE2\x95\xA4";
  if(ent=="boxhD") return "\xE2\x95\xA5";
  if(ent=="boxhd") return "\xE2\x94\xAC";
  if(ent=="boxHU") return "\xE2\x95\xA9";
  if(ent=="boxHu") return "\xE2\x95\xA7";
  if(ent=="boxhU") return "\xE2\x95\xA8";
  if(ent=="boxhu") return "\xE2\x94\xB4";
  if(ent=="boxminus") return "\xE2\x8A\x9F";
  if(ent=="boxplus") return "\xE2\x8A\x9E";
  if(ent=="boxtimes") return "\xE2\x8A\xA0";
  if(ent=="boxUL") return "\xE2\x95\x9D";
  if(ent=="boxUl") return "\xE2\x95\x9C";
  if(ent=="boxuL") return "\xE2\x95\x9B";
  if(ent=="boxul") return "\xE2\x94\x98";
  if(ent=="boxUR") return "\xE2\x95\x9A";
  if(ent=="boxUr") return "\xE2\x95\x99";
  if(ent=="boxuR") return "\xE2\x95\x98";
  if(ent=="boxur") return "\xE2\x94\x94";
  if(ent=="boxV") return "\xE2\x95\x91";
  if(ent=="boxv") return "\xE2\x94\x82";
  if(ent=="boxVH") return "\xE2\x95\xAC";
  if(ent=="boxVh") return "\xE2\x95\xAB";
  if(ent=="boxvH") return "\xE2\x95\xAA";
  if(ent=="boxvh") return "\xE2\x94\xBC";
  if(ent=="boxVL") return "\xE2\x95\xA3";
  if(ent=="boxVl") return "\xE2\x95\xA2";
  if(ent=="boxvL") return "\xE2\x95\xA1";
  if(ent=="boxvl") return "\xE2\x94\xA4";
  if(ent=="boxVR") return "\xE2\x95\xA0";
  if(ent=="boxVr") return "\xE2\x95\x9F";
  if(ent=="boxvR") return "\xE2\x95\x9E";
  if(ent=="boxvr") return "\xE2\x94\x9C";
  if(ent=="bprime") return "\xE2\x80\xB5";
  if(ent=="Breve") return "\xCB\x98";
  if(ent=="breve") return "\xCB\x98";
  if(ent=="brvbar") return "\xC2\xA6";
  if(ent=="Bscr") return "\xE2\x84\xAC";
  if(ent=="bscr") return "\xED\xA0\xB5\xED\xB2\xB7";
  if(ent=="bsemi") return "\xE2\x81\x8F";
  if(ent=="bsim") return "\xE2\x88\xBD";
  if(ent=="bsime") return "\xE2\x8B\x8D";
  if(ent=="bsol") return "\\";
  if(ent=="bsolb") return "\xE2\xA7\x85";
  if(ent=="bsolhsub") return "\xE2\x9F\x88";
  if(ent=="bull") return "\xE2\x80\xA2";
  if(ent=="bullet") return "\xE2\x80\xA2";
  if(ent=="bump") return "\xE2\x89\x8E";
  if(ent=="bumpE") return "\xE2\xAA\xAE";
  if(ent=="bumpe") return "\xE2\x89\x8F";
  if(ent=="Bumpeq") return "\xE2\x89\x8E";
  if(ent=="bumpeq") return "\xE2\x89\x8F";
  if(ent=="Cacute") return "\xC4\x86";
  if(ent=="cacute") return "\xC4\x87";
  if(ent=="Cap") return "\xE2\x8B\x92";
  if(ent=="cap") return "\xE2\x88\xA9";
  if(ent=="capand") return "\xE2\xA9\x84";
  if(ent=="capbrcup") return "\xE2\xA9\x89";
  if(ent=="capcap") return "\xE2\xA9\x8B";
  if(ent=="capcup") return "\xE2\xA9\x87";
  if(ent=="capdot") return "\xE2\xA9\x80";
  if(ent=="CapitalDifferentialD") return "\xE2\x85\x85";
  if(ent=="caps") return "\xE2\x88\xA9\xEF\xB8\x80";
  if(ent=="caret") return "\xE2\x81\x81";
  if(ent=="caron") return "\xCB\x87";
  if(ent=="Cayleys") return "\xE2\x84\xAD";
  if(ent=="ccaps") return "\xE2\xA9\x8D";
  if(ent=="Ccaron") return "\xC4\x8C";
  if(ent=="ccaron") return "\xC4\x8D";
  if(ent=="Ccedil") return "\xC3\x87";
  if(ent=="ccedil") return "\xC3\xA7";
  if(ent=="Ccirc") return "\xC4\x88";
  if(ent=="ccirc") return "\xC4\x89";
  if(ent=="Cconint") return "\xE2\x88\xB0";
  if(ent=="ccups") return "\xE2\xA9\x8C";
  if(ent=="ccupssm") return "\xE2\xA9\x90";
  if(ent=="Cdot") return "\xC4\x8A";
  if(ent=="cdot") return "\xC4\x8B";
  if(ent=="cedil") return "\xC2\xB8";
  if(ent=="Cedilla") return "\xC2\xB8";
  if(ent=="cemptyv") return "\xE2\xA6\xB2";
  if(ent=="cent") return "\xC2\xA2";
  if(ent=="CenterDot") return "\xC2\xB7";
  if(ent=="centerdot") return "\xC2\xB7";
  if(ent=="Cfr") return "\xE2\x84\xAD";
  if(ent=="cfr") return "\xED\xA0\xB5\xED\xB4\xA0";
  if(ent=="CHcy") return "\xD0\xA7";
  if(ent=="chcy") return "\xD1\x87";
  if(ent=="check") return "\xE2\x9C\x93";
  if(ent=="checkmark") return "\xE2\x9C\x93";
  if(ent=="Chi") return "\xCE\xA7";
  if(ent=="chi") return "\xCF\x87";
  if(ent=="cir") return "\xE2\x97\x8B";
  if(ent=="circ") return "\xCB\x86";
  if(ent=="circeq") return "\xE2\x89\x97";
  if(ent=="circlearrowleft") return "\xE2\x86\xBA";
  if(ent=="circlearrowright") return "\xE2\x86\xBB";
  if(ent=="circledast") return "\xE2\x8A\x9B";
  if(ent=="circledcirc") return "\xE2\x8A\x9A";
  if(ent=="circleddash") return "\xE2\x8A\x9D";
  if(ent=="CircleDot") return "\xE2\x8A\x99";
  if(ent=="circledR") return "\xC2\xAE";
  if(ent=="circledS") return "\xE2\x93\x88";
  if(ent=="CircleMinus") return "\xE2\x8A\x96";
  if(ent=="CirclePlus") return "\xE2\x8A\x95";
  if(ent=="CircleTimes") return "\xE2\x8A\x97";
  if(ent=="cirE") return "\xE2\xA7\x83";
  if(ent=="cire") return "\xE2\x89\x97";
  if(ent=="cirfnint") return "\xE2\xA8\x90";
  if(ent=="cirmid") return "\xE2\xAB\xAF";
  if(ent=="cirscir") return "\xE2\xA7\x82";
  if(ent=="ClockwiseContourIntegral") return "\xE2\x88\xB2";
  if(ent=="CloseCurlyDoubleQuote") return "\xE2\x80\x9D";
  if(ent=="CloseCurlyQuote") return "\xE2\x80\x99";
  if(ent=="clubs") return "\xE2\x99\xA3";
  if(ent=="clubsuit") return "\xE2\x99\xA3";
  if(ent=="Colon") return "\xE2\x88\xB7";
  if(ent=="colon") return ":";
  if(ent=="Colone") return "\xE2\xA9\xB4";
  if(ent=="colone") return "\xE2\x89\x94";
  if(ent=="coloneq") return "\xE2\x89\x94";
  if(ent=="comma") return ",";
  if(ent=="commat") return "@";
  if(ent=="comp") return "\xE2\x88\x81";
  if(ent=="compfn") return "\xE2\x88\x98";
  if(ent=="complement") return "\xE2\x88\x81";
  if(ent=="complexes") return "\xE2\x84\x82";
  if(ent=="cong") return "\xE2\x89\x85";
  if(ent=="congdot") return "\xE2\xA9\xAD";
  if(ent=="Congruent") return "\xE2\x89\xA1";
  if(ent=="Conint") return "\xE2\x88\xAF";
  if(ent=="conint") return "\xE2\x88\xAE";
  if(ent=="ContourIntegral") return "\xE2\x88\xAE";
  if(ent=="Copf") return "\xE2\x84\x82";
  if(ent=="copf") return "\xED\xA0\xB5\xED\xB5\x94";
  if(ent=="coprod") return "\xE2\x88\x90";
  if(ent=="Coproduct") return "\xE2\x88\x90";
  if(ent=="COPY") return "\xC2\xA9";
  if(ent=="copy") return "\xC2\xA9";
  if(ent=="copysr") return "\xE2\x84\x97";
  if(ent=="CounterClockwiseContourIntegral") return "\xE2\x88\xB3";
  if(ent=="crarr") return "\xE2\x86\xB5";
  if(ent=="Cross") return "\xE2\xA8\xAF";
  if(ent=="cross") return "\xE2\x9C\x97";
  if(ent=="Cscr") return "\xED\xA0\xB5\xED\xB2\x9E";
  if(ent=="cscr") return "\xED\xA0\xB5\xED\xB2\xB8";
  if(ent=="csub") return "\xE2\xAB\x8F";
  if(ent=="csube") return "\xE2\xAB\x91";
  if(ent=="csup") return "\xE2\xAB\x90";
  if(ent=="csupe") return "\xE2\xAB\x92";
  if(ent=="ctdot") return "\xE2\x8B\xAF";
  if(ent=="cudarrl") return "\xE2\xA4\xB8";
  if(ent=="cudarrr") return "\xE2\xA4\xB5";
  if(ent=="cuepr") return "\xE2\x8B\x9E";
  if(ent=="cuesc") return "\xE2\x8B\x9F";
  if(ent=="cularr") return "\xE2\x86\xB6";
  if(ent=="cularrp") return "\xE2\xA4\xBD";
  if(ent=="Cup") return "\xE2\x8B\x93";
  if(ent=="cup") return "\xE2\x88\xAA";
  if(ent=="cupbrcap") return "\xE2\xA9\x88";
  if(ent=="CupCap") return "\xE2\x89\x8D";
  if(ent=="cupcap") return "\xE2\xA9\x86";
  if(ent=="cupcup") return "\xE2\xA9\x8A";
  if(ent=="cupdot") return "\xE2\x8A\x8D";
  if(ent=="cupor") return "\xE2\xA9\x85";
  if(ent=="cups") return "\xE2\x88\xAA\xEF\xB8\x80";
  if(ent=="curarr") return "\xE2\x86\xB7";
  if(ent=="curarrm") return "\xE2\xA4\xBC";
  if(ent=="curlyeqprec") return "\xE2\x8B\x9E";
  if(ent=="curlyeqsucc") return "\xE2\x8B\x9F";
  if(ent=="curlyvee") return "\xE2\x8B\x8E";
  if(ent=="curlywedge") return "\xE2\x8B\x8F";
  if(ent=="curren") return "\xC2\xA4";
  if(ent=="curvearrowleft") return "\xE2\x86\xB6";
  if(ent=="curvearrowright") return "\xE2\x86\xB7";
  if(ent=="cuvee") return "\xE2\x8B\x8E";
  if(ent=="cuwed") return "\xE2\x8B\x8F";
  if(ent=="cwconint") return "\xE2\x88\xB2";
  if(ent=="cwint") return "\xE2\x88\xB1";
  if(ent=="cylcty") return "\xE2\x8C\xAD";
  if(ent=="Dagger") return "\xE2\x80\xA1";
  if(ent=="dagger") return "\xE2\x80\xA0";
  if(ent=="daleth") return "\xE2\x84\xB8";
  if(ent=="Darr") return "\xE2\x86\xA1";
  if(ent=="dArr") return "\xE2\x87\x93";
  if(ent=="darr") return "\xE2\x86\x93";
  if(ent=="dash") return "\xE2\x80\x90";
  if(ent=="Dashv") return "\xE2\xAB\xA4";
  if(ent=="dashv") return "\xE2\x8A\xA3";
  if(ent=="dbkarow") return "\xE2\xA4\x8F";
  if(ent=="dblac") return "\xCB\x9D";
  if(ent=="Dcaron") return "\xC4\x8E";
  if(ent=="dcaron") return "\xC4\x8F";
  if(ent=="Dcy") return "\xD0\x94";
  if(ent=="dcy") return "\xD0\xB4";
  if(ent=="DD") return "\xE2\x85\x85";
  if(ent=="dd") return "\xE2\x85\x86";
  if(ent=="ddagger") return "\xE2\x80\xA1";
  if(ent=="ddarr") return "\xE2\x87\x8A";
  if(ent=="DDotrahd") return "\xE2\xA4\x91";
  if(ent=="ddotseq") return "\xE2\xA9\xB7";
  if(ent=="deg") return "\xC2\xB0";
  if(ent=="Del") return "\xE2\x88\x87";
  if(ent=="Delta") return "\xCE\x94";
  if(ent=="delta") return "\xCE\xB4";
  if(ent=="demptyv") return "\xE2\xA6\xB1";
  if(ent=="dfisht") return "\xE2\xA5\xBF";
  if(ent=="Dfr") return "\xED\xA0\xB5\xED\xB4\x87";
  if(ent=="dfr") return "\xED\xA0\xB5\xED\xB4\xA1";
  if(ent=="dHar") return "\xE2\xA5\xA5";
  if(ent=="dharl") return "\xE2\x87\x83";
  if(ent=="dharr") return "\xE2\x87\x82";
  if(ent=="DiacriticalAcute") return "\xC2\xB4";
  if(ent=="DiacriticalDot") return "\xCB\x99";
  if(ent=="DiacriticalDoubleAcute") return "\xCB\x9D";
  if(ent=="DiacriticalGrave") return "`";
  if(ent=="DiacriticalTilde") return "\xCB\x9C";
  if(ent=="diam") return "\xE2\x8B\x84";
  if(ent=="Diamond") return "\xE2\x8B\x84";
  if(ent=="diamond") return "\xE2\x8B\x84";
  if(ent=="diamondsuit") return "\xE2\x99\xA6";
  if(ent=="diams") return "\xE2\x99\xA6";
  if(ent=="die") return "\xC2\xA8";
  if(ent=="DifferentialD") return "\xE2\x85\x86";
  if(ent=="digamma") return "\xCF\x9D";
  if(ent=="disin") return "\xE2\x8B\xB2";
  if(ent=="div") return "\xC3\xB7";
  if(ent=="divide") return "\xC3\xB7";
  if(ent=="divideontimes") return "\xE2\x8B\x87";
  if(ent=="divonx") return "\xE2\x8B\x87";
  if(ent=="DJcy") return "\xD0\x82";
  if(ent=="djcy") return "\xD1\x92";
  if(ent=="dlcorn") return "\xE2\x8C\x9E";
  if(ent=="dlcrop") return "\xE2\x8C\x8D";
  if(ent=="dollar") return "$";
  if(ent=="Dopf") return "\xED\xA0\xB5\xED\xB4\xBB";
  if(ent=="dopf") return "\xED\xA0\xB5\xED\xB5\x95";
  if(ent=="Dot") return "\xC2\xA8";
  if(ent=="dot") return "\xCB\x99";
  if(ent=="DotDot") return "\xE2\x83\x9C";
  if(ent=="doteq") return "\xE2\x89\x90";
  if(ent=="doteqdot") return "\xE2\x89\x91";
  if(ent=="DotEqual") return "\xE2\x89\x90";
  if(ent=="dotminus") return "\xE2\x88\xB8";
  if(ent=="dotplus") return "\xE2\x88\x94";
  if(ent=="dotsquare") return "\xE2\x8A\xA1";
  if(ent=="doublebarwedge") return "\xE2\x8C\x86";
  if(ent=="DoubleContourIntegral") return "\xE2\x88\xAF";
  if(ent=="DoubleDot") return "\xC2\xA8";
  if(ent=="DoubleDownArrow") return "\xE2\x87\x93";
  if(ent=="DoubleLeftArrow") return "\xE2\x87\x90";
  if(ent=="DoubleLeftRightArrow") return "\xE2\x87\x94";
  if(ent=="DoubleLeftTee") return "\xE2\xAB\xA4";
  if(ent=="DoubleLongLeftArrow") return "\xE2\x9F\xB8";
  if(ent=="DoubleLongLeftRightArrow") return "\xE2\x9F\xBA";
  if(ent=="DoubleLongRightArrow") return "\xE2\x9F\xB9";
  if(ent=="DoubleRightArrow") return "\xE2\x87\x92";
  if(ent=="DoubleRightTee") return "\xE2\x8A\xA8";
  if(ent=="DoubleUpArrow") return "\xE2\x87\x91";
  if(ent=="DoubleUpDownArrow") return "\xE2\x87\x95";
  if(ent=="DoubleVerticalBar") return "\xE2\x88\xA5";
  if(ent=="DownArrow") return "\xE2\x86\x93";
  if(ent=="Downarrow") return "\xE2\x87\x93";
  if(ent=="downarrow") return "\xE2\x86\x93";
  if(ent=="DownArrowBar") return "\xE2\xA4\x93";
  if(ent=="DownArrowUpArrow") return "\xE2\x87\xB5";
  if(ent=="DownBreve") return "\xCC\x91";
  if(ent=="downdownarrows") return "\xE2\x87\x8A";
  if(ent=="downharpoonleft") return "\xE2\x87\x83";
  if(ent=="downharpoonright") return "\xE2\x87\x82";
  if(ent=="DownLeftRightVector") return "\xE2\xA5\x90";
  if(ent=="DownLeftTeeVector") return "\xE2\xA5\x9E";
  if(ent=="DownLeftVector") return "\xE2\x86\xBD";
  if(ent=="DownLeftVectorBar") return "\xE2\xA5\x96";
  if(ent=="DownRightTeeVector") return "\xE2\xA5\x9F";
  if(ent=="DownRightVector") return "\xE2\x87\x81";
  if(ent=="DownRightVectorBar") return "\xE2\xA5\x97";
  if(ent=="DownTee") return "\xE2\x8A\xA4";
  if(ent=="DownTeeArrow") return "\xE2\x86\xA7";
  if(ent=="drbkarow") return "\xE2\xA4\x90";
  if(ent=="drcorn") return "\xE2\x8C\x9F";
  if(ent=="drcrop") return "\xE2\x8C\x8C";
  if(ent=="Dscr") return "\xED\xA0\xB5\xED\xB2\x9F";
  if(ent=="dscr") return "\xED\xA0\xB5\xED\xB2\xB9";
  if(ent=="DScy") return "\xD0\x85";
  if(ent=="dscy") return "\xD1\x95";
  if(ent=="dsol") return "\xE2\xA7\xB6";
  if(ent=="Dstrok") return "\xC4\x90";
  if(ent=="dstrok") return "\xC4\x91";
  if(ent=="dtdot") return "\xE2\x8B\xB1";
  if(ent=="dtri") return "\xE2\x96\xBF";
  if(ent=="dtrif") return "\xE2\x96\xBE";
  if(ent=="duarr") return "\xE2\x87\xB5";
  if(ent=="duhar") return "\xE2\xA5\xAF";
  if(ent=="dwangle") return "\xE2\xA6\xA6";
  if(ent=="DZcy") return "\xD0\x8F";
  if(ent=="dzcy") return "\xD1\x9F";
  if(ent=="dzigrarr") return "\xE2\x9F\xBF";
  if(ent=="Eacute") return "\xC3\x89";
  if(ent=="eacute") return "\xC3\xA9";
  if(ent=="easter") return "\xE2\xA9\xAE";
  if(ent=="Ecaron") return "\xC4\x9A";
  if(ent=="ecaron") return "\xC4\x9B";
  if(ent=="ecir") return "\xE2\x89\x96";
  if(ent=="Ecirc") return "\xC3\x8A";
  if(ent=="ecirc") return "\xC3\xAA";
  if(ent=="ecolon") return "\xE2\x89\x95";
  if(ent=="Ecy") return "\xD0\xAD";
  if(ent=="ecy") return "\xD1\x8D";
  if(ent=="eDDot") return "\xE2\xA9\xB7";
  if(ent=="Edot") return "\xC4\x96";
  if(ent=="eDot") return "\xE2\x89\x91";
  if(ent=="edot") return "\xC4\x97";
  if(ent=="ee") return "\xE2\x85\x87";
  if(ent=="efDot") return "\xE2\x89\x92";
  if(ent=="Efr") return "\xED\xA0\xB5\xED\xB4\x88";
  if(ent=="efr") return "\xED\xA0\xB5\xED\xB4\xA2";
  if(ent=="eg") return "\xE2\xAA\x9A";
  if(ent=="Egrave") return "\xC3\x88";
  if(ent=="egrave") return "\xC3\xA8";
  if(ent=="egs") return "\xE2\xAA\x96";
  if(ent=="egsdot") return "\xE2\xAA\x98";
  if(ent=="el") return "\xE2\xAA\x99";
  if(ent=="Element") return "\xE2\x88\x88";
  if(ent=="elinters") return "\xE2\x8F\xA7";
  if(ent=="ell") return "\xE2\x84\x93";
  if(ent=="els") return "\xE2\xAA\x95";
  if(ent=="elsdot") return "\xE2\xAA\x97";
  if(ent=="Emacr") return "\xC4\x92";
  if(ent=="emacr") return "\xC4\x93";
  if(ent=="empty") return "\xE2\x88\x85";
  if(ent=="emptyset") return "\xE2\x88\x85";
  if(ent=="EmptySmallSquare") return "\xE2\x97\xBB";
  if(ent=="emptyv") return "\xE2\x88\x85";
  if(ent=="EmptyVerySmallSquare") return "\xE2\x96\xAB";
  if(ent=="emsp") return "\xE2\x80\x83";
  if(ent=="emsp13") return "\xE2\x80\x84";
  if(ent=="emsp14") return "\xE2\x80\x85";
  if(ent=="ENG") return "\xC5\x8A";
  if(ent=="eng") return "\xC5\x8B";
  if(ent=="ensp") return "\xE2\x80\x82";
  if(ent=="Eogon") return "\xC4\x98";
  if(ent=="eogon") return "\xC4\x99";
  if(ent=="Eopf") return "\xED\xA0\xB5\xED\xB4\xBC";
  if(ent=="eopf") return "\xED\xA0\xB5\xED\xB5\x96";
  if(ent=="epar") return "\xE2\x8B\x95";
  if(ent=="eparsl") return "\xE2\xA7\xA3";
  if(ent=="eplus") return "\xE2\xA9\xB1";
  if(ent=="epsi") return "\xCE\xB5";
  if(ent=="Epsilon") return "\xCE\x95";
  if(ent=="epsilon") return "\xCE\xB5";
  if(ent=="epsiv") return "\xCF\xB5";
  if(ent=="eqcirc") return "\xE2\x89\x96";
  if(ent=="eqcolon") return "\xE2\x89\x95";
  if(ent=="eqsim") return "\xE2\x89\x82";
  if(ent=="eqslantgtr") return "\xE2\xAA\x96";
  if(ent=="eqslantless") return "\xE2\xAA\x95";
  if(ent=="Equal") return "\xE2\xA9\xB5";
  if(ent=="equals") return "=";
  if(ent=="EqualTilde") return "\xE2\x89\x82";
  if(ent=="equest") return "\xE2\x89\x9F";
  if(ent=="Equilibrium") return "\xE2\x87\x8C";
  if(ent=="equiv") return "\xE2\x89\xA1";
  if(ent=="equivDD") return "\xE2\xA9\xB8";
  if(ent=="eqvparsl") return "\xE2\xA7\xA5";
  if(ent=="erarr") return "\xE2\xA5\xB1";
  if(ent=="erDot") return "\xE2\x89\x93";
  if(ent=="Escr") return "\xE2\x84\xB0";
  if(ent=="escr") return "\xE2\x84\xAF";
  if(ent=="esdot") return "\xE2\x89\x90";
  if(ent=="Esim") return "\xE2\xA9\xB3";
  if(ent=="esim") return "\xE2\x89\x82";
  if(ent=="Eta") return "\xCE\x97";
  if(ent=="eta") return "\xCE\xB7";
  if(ent=="ETH") return "\xC3\x90";
  if(ent=="eth") return "\xC3\xB0";
  if(ent=="Euml") return "\xC3\x8B";
  if(ent=="euml") return "\xC3\xAB";
  if(ent=="euro") return "\xE2\x82\xAC";
  if(ent=="excl") return "!";
  if(ent=="exist") return "\xE2\x88\x83";
  if(ent=="Exists") return "\xE2\x88\x83";
  if(ent=="expectation") return "\xE2\x84\xB0";
  if(ent=="ExponentialE") return "\xE2\x85\x87";
  if(ent=="exponentiale") return "\xE2\x85\x87";
  if(ent=="fallingdotseq") return "\xE2\x89\x92";
  if(ent=="Fcy") return "\xD0\xA4";
  if(ent=="fcy") return "\xD1\x84";
  if(ent=="female") return "\xE2\x99\x80";
  if(ent=="ffilig") return "\xEF\xAC\x83";
  if(ent=="fflig") return "\xEF\xAC\x80";
  if(ent=="ffllig") return "\xEF\xAC\x84";
  if(ent=="Ffr") return "\xED\xA0\xB5\xED\xB4\x89";
  if(ent=="ffr") return "\xED\xA0\xB5\xED\xB4\xA3";
  if(ent=="filig") return "\xEF\xAC\x81";
  if(ent=="FilledSmallSquare") return "\xE2\x97\xBC";
  if(ent=="FilledVerySmallSquare") return "\xE2\x96\xAA";
  if(ent=="fjlig") return "fj";
  if(ent=="flat") return "\xE2\x99\xAD";
  if(ent=="fllig") return "\xEF\xAC\x82";
  if(ent=="fltns") return "\xE2\x96\xB1";
  if(ent=="fnof") return "\xC6\x92";
  if(ent=="Fopf") return "\xED\xA0\xB5\xED\xB4\xBD";
  if(ent=="fopf") return "\xED\xA0\xB5\xED\xB5\x97";
  if(ent=="ForAll") return "\xE2\x88\x80";
  if(ent=="forall") return "\xE2\x88\x80";
  if(ent=="fork") return "\xE2\x8B\x94";
  if(ent=="forkv") return "\xE2\xAB\x99";
  if(ent=="Fouriertrf") return "\xE2\x84\xB1";
  if(ent=="fpartint") return "\xE2\xA8\x8D";
  if(ent=="frac12") return "\xC2\xBD";
  if(ent=="frac13") return "\xE2\x85\x93";
  if(ent=="frac14") return "\xC2\xBC";
  if(ent=="frac15") return "\xE2\x85\x95";
  if(ent=="frac16") return "\xE2\x85\x99";
  if(ent=="frac18") return "\xE2\x85\x9B";
  if(ent=="frac23") return "\xE2\x85\x94";
  if(ent=="frac25") return "\xE2\x85\x96";
  if(ent=="frac34") return "\xC2\xBE";
  if(ent=="frac35") return "\xE2\x85\x97";
  if(ent=="frac38") return "\xE2\x85\x9C";
  if(ent=="frac45") return "\xE2\x85\x98";
  if(ent=="frac56") return "\xE2\x85\x9A";
  if(ent=="frac58") return "\xE2\x85\x9D";
  if(ent=="frac78") return "\xE2\x85\x9E";
  if(ent=="frasl") return "\xE2\x81\x84";
  if(ent=="frown") return "\xE2\x8C\xA2";
  if(ent=="Fscr") return "\xE2\x84\xB1";
  if(ent=="fscr") return "\xED\xA0\xB5\xED\xB2\xBB";
  if(ent=="gacute") return "\xC7\xB5";
  if(ent=="Gamma") return "\xCE\x93";
  if(ent=="gamma") return "\xCE\xB3";
  if(ent=="Gammad") return "\xCF\x9C";
  if(ent=="gammad") return "\xCF\x9D";
  if(ent=="gap") return "\xE2\xAA\x86";
  if(ent=="Gbreve") return "\xC4\x9E";
  if(ent=="gbreve") return "\xC4\x9F";
  if(ent=="Gcedil") return "\xC4\xA2";
  if(ent=="Gcirc") return "\xC4\x9C";
  if(ent=="gcirc") return "\xC4\x9D";
  if(ent=="Gcy") return "\xD0\x93";
  if(ent=="gcy") return "\xD0\xB3";
  if(ent=="Gdot") return "\xC4\xA0";
  if(ent=="gdot") return "\xC4\xA1";
  if(ent=="gE") return "\xE2\x89\xA7";
  if(ent=="ge") return "\xE2\x89\xA5";
  if(ent=="gEl") return "\xE2\xAA\x8C";
  if(ent=="gel") return "\xE2\x8B\x9B";
  if(ent=="geq") return "\xE2\x89\xA5";
  if(ent=="geqq") return "\xE2\x89\xA7";
  if(ent=="geqslant") return "\xE2\xA9\xBE";
  if(ent=="ges") return "\xE2\xA9\xBE";
  if(ent=="gescc") return "\xE2\xAA\xA9";
  if(ent=="gesdot") return "\xE2\xAA\x80";
  if(ent=="gesdoto") return "\xE2\xAA\x82";
  if(ent=="gesdotol") return "\xE2\xAA\x84";
  if(ent=="gesl") return "\xE2\x8B\x9B\xEF\xB8\x80";
  if(ent=="gesles") return "\xE2\xAA\x94";
  if(ent=="Gfr") return "\xED\xA0\xB5\xED\xB4\x8A";
  if(ent=="gfr") return "\xED\xA0\xB5\xED\xB4\xA4";
  if(ent=="Gg") return "\xE2\x8B\x99";
  if(ent=="gg") return "\xE2\x89\xAB";
  if(ent=="ggg") return "\xE2\x8B\x99";
  if(ent=="gimel") return "\xE2\x84\xB7";
  if(ent=="GJcy") return "\xD0\x83";
  if(ent=="gjcy") return "\xD1\x93";
  if(ent=="gl") return "\xE2\x89\xB7";
  if(ent=="gla") return "\xE2\xAA\xA5";
  if(ent=="glE") return "\xE2\xAA\x92";
  if(ent=="glj") return "\xE2\xAA\xA4";
  if(ent=="gnap") return "\xE2\xAA\x8A";
  if(ent=="gnapprox") return "\xE2\xAA\x8A";
  if(ent=="gnE") return "\xE2\x89\xA9";
  if(ent=="gne") return "\xE2\xAA\x88";
  if(ent=="gneq") return "\xE2\xAA\x88";
  if(ent=="gneqq") return "\xE2\x89\xA9";
  if(ent=="gnsim") return "\xE2\x8B\xA7";
  if(ent=="Gopf") return "\xED\xA0\xB5\xED\xB4\xBE";
  if(ent=="gopf") return "\xED\xA0\xB5\xED\xB5\x98";
  if(ent=="grave") return "`";
  if(ent=="GreaterEqual") return "\xE2\x89\xA5";
  if(ent=="GreaterEqualLess") return "\xE2\x8B\x9B";
  if(ent=="GreaterFullEqual") return "\xE2\x89\xA7";
  if(ent=="GreaterGreater") return "\xE2\xAA\xA2";
  if(ent=="GreaterLess") return "\xE2\x89\xB7";
  if(ent=="GreaterSlantEqual") return "\xE2\xA9\xBE";
  if(ent=="GreaterTilde") return "\xE2\x89\xB3";
  if(ent=="Gscr") return "\xED\xA0\xB5\xED\xB2\xA2";
  if(ent=="gscr") return "\xE2\x84\x8A";
  if(ent=="gsim") return "\xE2\x89\xB3";
  if(ent=="gsime") return "\xE2\xAA\x8E";
  if(ent=="gsiml") return "\xE2\xAA\x90";
  if(ent=="GT") return ">";
  if(ent=="Gt") return "\xE2\x89\xAB";
  if(ent=="gt") return ">";
  if(ent=="gtcc") return "\xE2\xAA\xA7";
  if(ent=="gtcir") return "\xE2\xA9\xBA";
  if(ent=="gtdot") return "\xE2\x8B\x97";
  if(ent=="gtlPar") return "\xE2\xA6\x95";
  if(ent=="gtquest") return "\xE2\xA9\xBC";
  if(ent=="gtrapprox") return "\xE2\xAA\x86";
  if(ent=="gtrarr") return "\xE2\xA5\xB8";
  if(ent=="gtrdot") return "\xE2\x8B\x97";
  if(ent=="gtreqless") return "\xE2\x8B\x9B";
  if(ent=="gtreqqless") return "\xE2\xAA\x8C";
  if(ent=="gtrless") return "\xE2\x89\xB7";
  if(ent=="gtrsim") return "\xE2\x89\xB3";
  if(ent=="gvertneqq") return "\xE2\x89\xA9\xEF\xB8\x80";
  if(ent=="gvnE") return "\xE2\x89\xA9\xEF\xB8\x80";
  if(ent=="Hacek") return "\xCB\x87";
  if(ent=="hairsp") return "\xE2\x80\x8A";
  if(ent=="half") return "\xC2\xBD";
  if(ent=="hamilt") return "\xE2\x84\x8B";
  if(ent=="HARDcy") return "\xD0\xAA";
  if(ent=="hardcy") return "\xD1\x8A";
  if(ent=="hArr") return "\xE2\x87\x94";
  if(ent=="harr") return "\xE2\x86\x94";
  if(ent=="harrcir") return "\xE2\xA5\x88";
  if(ent=="harrw") return "\xE2\x86\xAD";
  if(ent=="Hat") return "^";
  if(ent=="hbar") return "\xE2\x84\x8F";
  if(ent=="Hcirc") return "\xC4\xA4";
  if(ent=="hcirc") return "\xC4\xA5";
  if(ent=="hearts") return "\xE2\x99\xA5";
  if(ent=="heartsuit") return "\xE2\x99\xA5";
  if(ent=="hellip") return "\xE2\x80\xA6";
  if(ent=="hercon") return "\xE2\x8A\xB9";
  if(ent=="Hfr") return "\xE2\x84\x8C";
  if(ent=="hfr") return "\xED\xA0\xB5\xED\xB4\xA5";
  if(ent=="HilbertSpace") return "\xE2\x84\x8B";
  if(ent=="hksearow") return "\xE2\xA4\xA5";
  if(ent=="hkswarow") return "\xE2\xA4\xA6";
  if(ent=="hoarr") return "\xE2\x87\xBF";
  if(ent=="homtht") return "\xE2\x88\xBB";
  if(ent=="hookleftarrow") return "\xE2\x86\xA9";
  if(ent=="hookrightarrow") return "\xE2\x86\xAA";
  if(ent=="Hopf") return "\xE2\x84\x8D";
  if(ent=="hopf") return "\xED\xA0\xB5\xED\xB5\x99";
  if(ent=="horbar") return "\xE2\x80\x95";
  if(ent=="HorizontalLine") return "\xE2\x94\x80";
  if(ent=="Hscr") return "\xE2\x84\x8B";
  if(ent=="hscr") return "\xED\xA0\xB5\xED\xB2\xBD";
  if(ent=="hslash") return "\xE2\x84\x8F";
  if(ent=="Hstrok") return "\xC4\xA6";
  if(ent=="hstrok") return "\xC4\xA7";
  if(ent=="HumpDownHump") return "\xE2\x89\x8E";
  if(ent=="HumpEqual") return "\xE2\x89\x8F";
  if(ent=="hybull") return "\xE2\x81\x83";
  if(ent=="hyphen") return "\xE2\x80\x90";
  if(ent=="Iacute") return "\xC3\x8D";
  if(ent=="iacute") return "\xC3\xAD";
  if(ent=="ic") return "\xE2\x81\xA3";
  if(ent=="Icirc") return "\xC3\x8E";
  if(ent=="icirc") return "\xC3\xAE";
  if(ent=="Icy") return "\xD0\x98";
  if(ent=="icy") return "\xD0\xB8";
  if(ent=="Idot") return "\xC4\xB0";
  if(ent=="IEcy") return "\xD0\x95";
  if(ent=="iecy") return "\xD0\xB5";
  if(ent=="iexcl") return "\xC2\xA1";
  if(ent=="iff") return "\xE2\x87\x94";
  if(ent=="Ifr") return "\xE2\x84\x91";
  if(ent=="ifr") return "\xED\xA0\xB5\xED\xB4\xA6";
  if(ent=="Igrave") return "\xC3\x8C";
  if(ent=="igrave") return "\xC3\xAC";
  if(ent=="ii") return "\xE2\x85\x88";
  if(ent=="iiiint") return "\xE2\xA8\x8C";
  if(ent=="iiint") return "\xE2\x88\xAD";
  if(ent=="iinfin") return "\xE2\xA7\x9C";
  if(ent=="iiota") return "\xE2\x84\xA9";
  if(ent=="IJlig") return "\xC4\xB2";
  if(ent=="ijlig") return "\xC4\xB3";
  if(ent=="Im") return "\xE2\x84\x91";
  if(ent=="Imacr") return "\xC4\xAA";
  if(ent=="imacr") return "\xC4\xAB";
  if(ent=="image") return "\xE2\x84\x91";
  if(ent=="ImaginaryI") return "\xE2\x85\x88";
  if(ent=="imagline") return "\xE2\x84\x90";
  if(ent=="imagpart") return "\xE2\x84\x91";
  if(ent=="imath") return "\xC4\xB1";
  if(ent=="imof") return "\xE2\x8A\xB7";
  if(ent=="imped") return "\xC6\xB5";
  if(ent=="Implies") return "\xE2\x87\x92";
  if(ent=="in") return "\xE2\x88\x88";
  if(ent=="incare") return "\xE2\x84\x85";
  if(ent=="infin") return "\xE2\x88\x9E";
  if(ent=="infintie") return "\xE2\xA7\x9D";
  if(ent=="inodot") return "\xC4\xB1";
  if(ent=="Int") return "\xE2\x88\xAC";
  if(ent=="int") return "\xE2\x88\xAB";
  if(ent=="intcal") return "\xE2\x8A\xBA";
  if(ent=="integers") return "\xE2\x84\xA4";
  if(ent=="Integral") return "\xE2\x88\xAB";
  if(ent=="intercal") return "\xE2\x8A\xBA";
  if(ent=="Intersection") return "\xE2\x8B\x82";
  if(ent=="intlarhk") return "\xE2\xA8\x97";
  if(ent=="intprod") return "\xE2\xA8\xBC";
  if(ent=="InvisibleComma") return "\xE2\x81\xA3";
  if(ent=="InvisibleTimes") return "\xE2\x81\xA2";
  if(ent=="IOcy") return "\xD0\x81";
  if(ent=="iocy") return "\xD1\x91";
  if(ent=="Iogon") return "\xC4\xAE";
  if(ent=="iogon") return "\xC4\xAF";
  if(ent=="Iopf") return "\xED\xA0\xB5\xED\xB5\x80";
  if(ent=="iopf") return "\xED\xA0\xB5\xED\xB5\x9A";
  if(ent=="Iota") return "\xCE\x99";
  if(ent=="iota") return "\xCE\xB9";
  if(ent=="iprod") return "\xE2\xA8\xBC";
  if(ent=="iquest") return "\xC2\xBF";
  if(ent=="Iscr") return "\xE2\x84\x90";
  if(ent=="iscr") return "\xED\xA0\xB5\xED\xB2\xBE";
  if(ent=="isin") return "\xE2\x88\x88";
  if(ent=="isindot") return "\xE2\x8B\xB5";
  if(ent=="isinE") return "\xE2\x8B\xB9";
  if(ent=="isins") return "\xE2\x8B\xB4";
  if(ent=="isinsv") return "\xE2\x8B\xB3";
  if(ent=="isinv") return "\xE2\x88\x88";
  if(ent=="it") return "\xE2\x81\xA2";
  if(ent=="Itilde") return "\xC4\xA8";
  if(ent=="itilde") return "\xC4\xA9";
  if(ent=="Iukcy") return "\xD0\x86";
  if(ent=="iukcy") return "\xD1\x96";
  if(ent=="Iuml") return "\xC3\x8F";
  if(ent=="iuml") return "\xC3\xAF";
  if(ent=="Jcirc") return "\xC4\xB4";
  if(ent=="jcirc") return "\xC4\xB5";
  if(ent=="Jcy") return "\xD0\x99";
  if(ent=="jcy") return "\xD0\xB9";
  if(ent=="Jfr") return "\xED\xA0\xB5\xED\xB4\x8D";
  if(ent=="jfr") return "\xED\xA0\xB5\xED\xB4\xA7";
  if(ent=="jmath") return "\xC8\xB7";
  if(ent=="Jopf") return "\xED\xA0\xB5\xED\xB5\x81";
  if(ent=="jopf") return "\xED\xA0\xB5\xED\xB5\x9B";
  if(ent=="Jscr") return "\xED\xA0\xB5\xED\xB2\xA5";
  if(ent=="jscr") return "\xED\xA0\xB5\xED\xB2\xBF";
  if(ent=="Jsercy") return "\xD0\x88";
  if(ent=="jsercy") return "\xD1\x98";
  if(ent=="Jukcy") return "\xD0\x84";
  if(ent=="jukcy") return "\xD1\x94";
  if(ent=="Kappa") return "\xCE\x9A";
  if(ent=="kappa") return "\xCE\xBA";
  if(ent=="kappav") return "\xCF\xB0";
  if(ent=="Kcedil") return "\xC4\xB6";
  if(ent=="kcedil") return "\xC4\xB7";
  if(ent=="Kcy") return "\xD0\x9A";
  if(ent=="kcy") return "\xD0\xBA";
  if(ent=="Kfr") return "\xED\xA0\xB5\xED\xB4\x8E";
  if(ent=="kfr") return "\xED\xA0\xB5\xED\xB4\xA8";
  if(ent=="kgreen") return "\xC4\xB8";
  if(ent=="KHcy") return "\xD0\xA5";
  if(ent=="khcy") return "\xD1\x85";
  if(ent=="KJcy") return "\xD0\x8C";
  if(ent=="kjcy") return "\xD1\x9C";
  if(ent=="Kopf") return "\xED\xA0\xB5\xED\xB5\x82";
  if(ent=="kopf") return "\xED\xA0\xB5\xED\xB5\x9C";
  if(ent=="Kscr") return "\xED\xA0\xB5\xED\xB2\xA6";
  if(ent=="kscr") return "\xED\xA0\xB5\xED\xB3\x80";
  if(ent=="lAarr") return "\xE2\x87\x9A";
  if(ent=="Lacute") return "\xC4\xB9";
  if(ent=="lacute") return "\xC4\xBA";
  if(ent=="laemptyv") return "\xE2\xA6\xB4";
  if(ent=="lagran") return "\xE2\x84\x92";
  if(ent=="Lambda") return "\xCE\x9B";
  if(ent=="lambda") return "\xCE\xBB";
  if(ent=="Lang") return "\xE2\x9F\xAA";
  if(ent=="lang") return "\xE2\x9F\xA8";
  if(ent=="langd") return "\xE2\xA6\x91";
  if(ent=="langle") return "\xE2\x9F\xA8";
  if(ent=="lap") return "\xE2\xAA\x85";
  if(ent=="Laplacetrf") return "\xE2\x84\x92";
  if(ent=="laquo") return "\xC2\xAB";
  if(ent=="Larr") return "\xE2\x86\x9E";
  if(ent=="lArr") return "\xE2\x87\x90";
  if(ent=="larr") return "\xE2\x86\x90";
  if(ent=="larrb") return "\xE2\x87\xA4";
  if(ent=="larrbfs") return "\xE2\xA4\x9F";
  if(ent=="larrfs") return "\xE2\xA4\x9D";
  if(ent=="larrhk") return "\xE2\x86\xA9";
  if(ent=="larrlp") return "\xE2\x86\xAB";
  if(ent=="larrpl") return "\xE2\xA4\xB9";
  if(ent=="larrsim") return "\xE2\xA5\xB3";
  if(ent=="larrtl") return "\xE2\x86\xA2";
  if(ent=="lat") return "\xE2\xAA\xAB";
  if(ent=="lAtail") return "\xE2\xA4\x9B";
  if(ent=="latail") return "\xE2\xA4\x99";
  if(ent=="late") return "\xE2\xAA\xAD";
  if(ent=="lates") return "\xE2\xAA\xAD\xEF\xB8\x80";
  if(ent=="lBarr") return "\xE2\xA4\x8E";
  if(ent=="lbarr") return "\xE2\xA4\x8C";
  if(ent=="lbbrk") return "\xE2\x9D\xB2";
  if(ent=="lbrace") return "{";
  if(ent=="lbrack") return "[";
  if(ent=="lbrke") return "\xE2\xA6\x8B";
  if(ent=="lbrksld") return "\xE2\xA6\x8F";
  if(ent=="lbrkslu") return "\xE2\xA6\x8D";
  if(ent=="Lcaron") return "\xC4\xBD";
  if(ent=="lcaron") return "\xC4\xBE";
  if(ent=="Lcedil") return "\xC4\xBB";
  if(ent=="lcedil") return "\xC4\xBC";
  if(ent=="lceil") return "\xE2\x8C\x88";
  if(ent=="lcub") return "{";
  if(ent=="Lcy") return "\xD0\x9B";
  if(ent=="lcy") return "\xD0\xBB";
  if(ent=="ldca") return "\xE2\xA4\xB6";
  if(ent=="ldquo") return "\xE2\x80\x9C";
  if(ent=="ldquor") return "\xE2\x80\x9E";
  if(ent=="ldrdhar") return "\xE2\xA5\xA7";
  if(ent=="ldrushar") return "\xE2\xA5\x8B";
  if(ent=="ldsh") return "\xE2\x86\xB2";
  if(ent=="lE") return "\xE2\x89\xA6";
  if(ent=="le") return "\xE2\x89\xA4";
  if(ent=="LeftAngleBracket") return "\xE2\x9F\xA8";
  if(ent=="LeftArrow") return "\xE2\x86\x90";
  if(ent=="Leftarrow") return "\xE2\x87\x90";
  if(ent=="leftarrow") return "\xE2\x86\x90";
  if(ent=="LeftArrowBar") return "\xE2\x87\xA4";
  if(ent=="LeftArrowRightArrow") return "\xE2\x87\x86";
  if(ent=="leftarrowtail") return "\xE2\x86\xA2";
  if(ent=="LeftCeiling") return "\xE2\x8C\x88";
  if(ent=="LeftDoubleBracket") return "\xE2\x9F\xA6";
  if(ent=="LeftDownTeeVector") return "\xE2\xA5\xA1";
  if(ent=="LeftDownVector") return "\xE2\x87\x83";
  if(ent=="LeftDownVectorBar") return "\xE2\xA5\x99";
  if(ent=="LeftFloor") return "\xE2\x8C\x8A";
  if(ent=="leftharpoondown") return "\xE2\x86\xBD";
  if(ent=="leftharpoonup") return "\xE2\x86\xBC";
  if(ent=="leftleftarrows") return "\xE2\x87\x87";
  if(ent=="LeftRightArrow") return "\xE2\x86\x94";
  if(ent=="Leftrightarrow") return "\xE2\x87\x94";
  if(ent=="leftrightarrow") return "\xE2\x86\x94";
  if(ent=="leftrightarrows") return "\xE2\x87\x86";
  if(ent=="leftrightharpoons") return "\xE2\x87\x8B";
  if(ent=="leftrightsquigarrow") return "\xE2\x86\xAD";
  if(ent=="LeftRightVector") return "\xE2\xA5\x8E";
  if(ent=="LeftTee") return "\xE2\x8A\xA3";
  if(ent=="LeftTeeArrow") return "\xE2\x86\xA4";
  if(ent=="LeftTeeVector") return "\xE2\xA5\x9A";
  if(ent=="leftthreetimes") return "\xE2\x8B\x8B";
  if(ent=="LeftTriangle") return "\xE2\x8A\xB2";
  if(ent=="LeftTriangleBar") return "\xE2\xA7\x8F";
  if(ent=="LeftTriangleEqual") return "\xE2\x8A\xB4";
  if(ent=="LeftUpDownVector") return "\xE2\xA5\x91";
  if(ent=="LeftUpTeeVector") return "\xE2\xA5\xA0";
  if(ent=="LeftUpVector") return "\xE2\x86\xBF";
  if(ent=="LeftUpVectorBar") return "\xE2\xA5\x98";
  if(ent=="LeftVector") return "\xE2\x86\xBC";
  if(ent=="LeftVectorBar") return "\xE2\xA5\x92";
  if(ent=="lEg") return "\xE2\xAA\x8B";
  if(ent=="leg") return "\xE2\x8B\x9A";
  if(ent=="leq") return "\xE2\x89\xA4";
  if(ent=="leqq") return "\xE2\x89\xA6";
  if(ent=="leqslant") return "\xE2\xA9\xBD";
  if(ent=="les") return "\xE2\xA9\xBD";
  if(ent=="lescc") return "\xE2\xAA\xA8";
  if(ent=="lesdot") return "\xE2\xA9\xBF";
  if(ent=="lesdoto") return "\xE2\xAA\x81";
  if(ent=="lesdotor") return "\xE2\xAA\x83";
  if(ent=="lesg") return "\xE2\x8B\x9A\xEF\xB8\x80";
  if(ent=="lesges") return "\xE2\xAA\x93";
  if(ent=="lessapprox") return "\xE2\xAA\x85";
  if(ent=="lessdot") return "\xE2\x8B\x96";
  if(ent=="lesseqgtr") return "\xE2\x8B\x9A";
  if(ent=="lesseqqgtr") return "\xE2\xAA\x8B";
  if(ent=="LessEqualGreater") return "\xE2\x8B\x9A";
  if(ent=="LessFullEqual") return "\xE2\x89\xA6";
  if(ent=="LessGreater") return "\xE2\x89\xB6";
  if(ent=="lessgtr") return "\xE2\x89\xB6";
  if(ent=="LessLess") return "\xE2\xAA\xA1";
  if(ent=="lesssim") return "\xE2\x89\xB2";
  if(ent=="LessSlantEqual") return "\xE2\xA9\xBD";
  if(ent=="LessTilde") return "\xE2\x89\xB2";
  if(ent=="lfisht") return "\xE2\xA5\xBC";
  if(ent=="lfloor") return "\xE2\x8C\x8A";
  if(ent=="Lfr") return "\xED\xA0\xB5\xED\xB4\x8F";
  if(ent=="lfr") return "\xED\xA0\xB5\xED\xB4\xA9";
  if(ent=="lg") return "\xE2\x89\xB6";
  if(ent=="lgE") return "\xE2\xAA\x91";
  if(ent=="lHar") return "\xE2\xA5\xA2";
  if(ent=="lhard") return "\xE2\x86\xBD";
  if(ent=="lharu") return "\xE2\x86\xBC";
  if(ent=="lharul") return "\xE2\xA5\xAA";
  if(ent=="lhblk") return "\xE2\x96\x84";
  if(ent=="LJcy") return "\xD0\x89";
  if(ent=="ljcy") return "\xD1\x99";
  if(ent=="Ll") return "\xE2\x8B\x98";
  if(ent=="ll") return "\xE2\x89\xAA";
  if(ent=="llarr") return "\xE2\x87\x87";
  if(ent=="llcorner") return "\xE2\x8C\x9E";
  if(ent=="Lleftarrow") return "\xE2\x87\x9A";
  if(ent=="llhard") return "\xE2\xA5\xAB";
  if(ent=="lltri") return "\xE2\x97\xBA";
  if(ent=="Lmidot") return "\xC4\xBF";
  if(ent=="lmidot") return "\xC5\x80";
  if(ent=="lmoust") return "\xE2\x8E\xB0";
  if(ent=="lmoustache") return "\xE2\x8E\xB0";
  if(ent=="lnap") return "\xE2\xAA\x89";
  if(ent=="lnapprox") return "\xE2\xAA\x89";
  if(ent=="lnE") return "\xE2\x89\xA8";
  if(ent=="lne") return "\xE2\xAA\x87";
  if(ent=="lneq") return "\xE2\xAA\x87";
  if(ent=="lneqq") return "\xE2\x89\xA8";
  if(ent=="lnsim") return "\xE2\x8B\xA6";
  if(ent=="loang") return "\xE2\x9F\xAC";
  if(ent=="loarr") return "\xE2\x87\xBD";
  if(ent=="lobrk") return "\xE2\x9F\xA6";
  if(ent=="LongLeftArrow") return "\xE2\x9F\xB5";
  if(ent=="Longleftarrow") return "\xE2\x9F\xB8";
  if(ent=="longleftarrow") return "\xE2\x9F\xB5";
  if(ent=="LongLeftRightArrow") return "\xE2\x9F\xB7";
  if(ent=="Longleftrightarrow") return "\xE2\x9F\xBA";
  if(ent=="longleftrightarrow") return "\xE2\x9F\xB7";
  if(ent=="longmapsto") return "\xE2\x9F\xBC";
  if(ent=="LongRightArrow") return "\xE2\x9F\xB6";
  if(ent=="Longrightarrow") return "\xE2\x9F\xB9";
  if(ent=="longrightarrow") return "\xE2\x9F\xB6";
  if(ent=="looparrowleft") return "\xE2\x86\xAB";
  if(ent=="looparrowright") return "\xE2\x86\xAC";
  if(ent=="lopar") return "\xE2\xA6\x85";
  if(ent=="Lopf") return "\xED\xA0\xB5\xED\xB5\x83";
  if(ent=="lopf") return "\xED\xA0\xB5\xED\xB5\x9D";
  if(ent=="loplus") return "\xE2\xA8\xAD";
  if(ent=="lotimes") return "\xE2\xA8\xB4";
  if(ent=="lowast") return "\xE2\x88\x97";
  if(ent=="lowbar") return "_";
  if(ent=="LowerLeftArrow") return "\xE2\x86\x99";
  if(ent=="LowerRightArrow") return "\xE2\x86\x98";
  if(ent=="loz") return "\xE2\x97\x8A";
  if(ent=="lozenge") return "\xE2\x97\x8A";
  if(ent=="lozf") return "\xE2\xA7\xAB";
  if(ent=="lpar") return "(";
  if(ent=="lparlt") return "\xE2\xA6\x93";
  if(ent=="lrarr") return "\xE2\x87\x86";
  if(ent=="lrcorner") return "\xE2\x8C\x9F";
  if(ent=="lrhar") return "\xE2\x87\x8B";
  if(ent=="lrhard") return "\xE2\xA5\xAD";
  if(ent=="lrm") return "\xE2\x80\x8E";
  if(ent=="lrtri") return "\xE2\x8A\xBF";
  if(ent=="lsaquo") return "\xE2\x80\xB9";
  if(ent=="Lscr") return "\xE2\x84\x92";
  if(ent=="lscr") return "\xED\xA0\xB5\xED\xB3\x81";
  if(ent=="Lsh") return "\xE2\x86\xB0";
  if(ent=="lsh") return "\xE2\x86\xB0";
  if(ent=="lsim") return "\xE2\x89\xB2";
  if(ent=="lsime") return "\xE2\xAA\x8D";
  if(ent=="lsimg") return "\xE2\xAA\x8F";
  if(ent=="lsqb") return "[";
  if(ent=="lsquo") return "\xE2\x80\x98";
  if(ent=="lsquor") return "\xE2\x80\x9A";
  if(ent=="Lstrok") return "\xC5\x81";
  if(ent=="lstrok") return "\xC5\x82";
  if(ent=="LT") return "<";
  if(ent=="Lt") return "\xE2\x89\xAA";
  if(ent=="lt") return "<";
  if(ent=="ltcc") return "\xE2\xAA\xA6";
  if(ent=="ltcir") return "\xE2\xA9\xB9";
  if(ent=="ltdot") return "\xE2\x8B\x96";
  if(ent=="lthree") return "\xE2\x8B\x8B";
  if(ent=="ltimes") return "\xE2\x8B\x89";
  if(ent=="ltlarr") return "\xE2\xA5\xB6";
  if(ent=="ltquest") return "\xE2\xA9\xBB";
  if(ent=="ltri") return "\xE2\x97\x83";
  if(ent=="ltrie") return "\xE2\x8A\xB4";
  if(ent=="ltrif") return "\xE2\x97\x82";
  if(ent=="ltrPar") return "\xE2\xA6\x96";
  if(ent=="lurdshar") return "\xE2\xA5\x8A";
  if(ent=="luruhar") return "\xE2\xA5\xA6";
  if(ent=="lvertneqq") return "\xE2\x89\xA8\xEF\xB8\x80";
  if(ent=="lvnE") return "\xE2\x89\xA8\xEF\xB8\x80";
  if(ent=="macr") return "\xC2\xAF";
  if(ent=="male") return "\xE2\x99\x82";
  if(ent=="malt") return "\xE2\x9C\xA0";
  if(ent=="maltese") return "\xE2\x9C\xA0";
  if(ent=="Map") return "\xE2\xA4\x85";
  if(ent=="map") return "\xE2\x86\xA6";
  if(ent=="mapsto") return "\xE2\x86\xA6";
  if(ent=="mapstodown") return "\xE2\x86\xA7";
  if(ent=="mapstoleft") return "\xE2\x86\xA4";
  if(ent=="mapstoup") return "\xE2\x86\xA5";
  if(ent=="marker") return "\xE2\x96\xAE";
  if(ent=="mcomma") return "\xE2\xA8\xA9";
  if(ent=="Mcy") return "\xD0\x9C";
  if(ent=="mcy") return "\xD0\xBC";
  if(ent=="mdash") return "\xE2\x80\x94";
  if(ent=="mDDot") return "\xE2\x88\xBA";
  if(ent=="measuredangle") return "\xE2\x88\xA1";
  if(ent=="MediumSpace") return "\xE2\x81\x9F";
  if(ent=="Mellintrf") return "\xE2\x84\xB3";
  if(ent=="Mfr") return "\xED\xA0\xB5\xED\xB4\x90";
  if(ent=="mfr") return "\xED\xA0\xB5\xED\xB4\xAA";
  if(ent=="mho") return "\xE2\x84\xA7";
  if(ent=="micro") return "\xC2\xB5";
  if(ent=="mid") return "\xE2\x88\xA3";
  if(ent=="midast") return "*";
  if(ent=="midcir") return "\xE2\xAB\xB0";
  if(ent=="middot") return "\xC2\xB7";
  if(ent=="minus") return "\xE2\x88\x92";
  if(ent=="minusb") return "\xE2\x8A\x9F";
  if(ent=="minusd") return "\xE2\x88\xB8";
  if(ent=="minusdu") return "\xE2\xA8\xAA";
  if(ent=="MinusPlus") return "\xE2\x88\x93";
  if(ent=="mlcp") return "\xE2\xAB\x9B";
  if(ent=="mldr") return "\xE2\x80\xA6";
  if(ent=="mnplus") return "\xE2\x88\x93";
  if(ent=="models") return "\xE2\x8A\xA7";
  if(ent=="Mopf") return "\xED\xA0\xB5\xED\xB5\x84";
  if(ent=="mopf") return "\xED\xA0\xB5\xED\xB5\x9E";
  if(ent=="mp") return "\xE2\x88\x93";
  if(ent=="Mscr") return "\xE2\x84\xB3";
  if(ent=="mscr") return "\xED\xA0\xB5\xED\xB3\x82";
  if(ent=="mstpos") return "\xE2\x88\xBE";
  if(ent=="Mu") return "\xCE\x9C";
  if(ent=="mu") return "\xCE\xBC";
  if(ent=="multimap") return "\xE2\x8A\xB8";
  if(ent=="mumap") return "\xE2\x8A\xB8";
  if(ent=="nabla") return "\xE2\x88\x87";
  if(ent=="Nacute") return "\xC5\x83";
  if(ent=="nacute") return "\xC5\x84";
  if(ent=="nang") return "\xE2\x88\xA0\xE2\x83\x92";
  if(ent=="nap") return "\xE2\x89\x89";
  if(ent=="napE") return "\xE2\xA9\xB0\xCC\xB8";
  if(ent=="napid") return "\xE2\x89\x8B\xCC\xB8";
  if(ent=="napos") return "\xC5\x89";
  if(ent=="napprox") return "\xE2\x89\x89";
  if(ent=="natur") return "\xE2\x99\xAE";
  if(ent=="natural") return "\xE2\x99\xAE";
  if(ent=="naturals") return "\xE2\x84\x95";
  if(ent=="nbsp") return "\xC2\xA0";
  if(ent=="nbump") return "\xE2\x89\x8E\xCC\xB8";
  if(ent=="nbumpe") return "\xE2\x89\x8F\xCC\xB8";
  if(ent=="ncap") return "\xE2\xA9\x83";
  if(ent=="Ncaron") return "\xC5\x87";
  if(ent=="ncaron") return "\xC5\x88";
  if(ent=="Ncedil") return "\xC5\x85";
  if(ent=="ncedil") return "\xC5\x86";
  if(ent=="ncong") return "\xE2\x89\x87";
  if(ent=="ncongdot") return "\xE2\xA9\xAD\xCC\xB8";
  if(ent=="ncup") return "\xE2\xA9\x82";
  if(ent=="Ncy") return "\xD0\x9D";
  if(ent=="ncy") return "\xD0\xBD";
  if(ent=="ndash") return "\xE2\x80\x93";
  if(ent=="ne") return "\xE2\x89\xA0";
  if(ent=="nearhk") return "\xE2\xA4\xA4";
  if(ent=="neArr") return "\xE2\x87\x97";
  if(ent=="nearr") return "\xE2\x86\x97";
  if(ent=="nearrow") return "\xE2\x86\x97";
  if(ent=="nedot") return "\xE2\x89\x90\xCC\xB8";
  if(ent=="NegativeMediumSpace") return "\xE2\x80\x8B";
  if(ent=="NegativeThickSpace") return "\xE2\x80\x8B";
  if(ent=="NegativeThinSpace") return "\xE2\x80\x8B";
  if(ent=="NegativeVeryThinSpace") return "\xE2\x80\x8B";
  if(ent=="nequiv") return "\xE2\x89\xA2";
  if(ent=="nesear") return "\xE2\xA4\xA8";
  if(ent=="nesim") return "\xE2\x89\x82\xCC\xB8";
  if(ent=="NestedGreaterGreater") return "\xE2\x89\xAB";
  if(ent=="NestedLessLess") return "\xE2\x89\xAA";
  if(ent=="NewLine") return "\n";
  if(ent=="nexist") return "\xE2\x88\x84";
  if(ent=="nexists") return "\xE2\x88\x84";
  if(ent=="Nfr") return "\xED\xA0\xB5\xED\xB4\x91";
  if(ent=="nfr") return "\xED\xA0\xB5\xED\xB4\xAB";
  if(ent=="ngE") return "\xE2\x89\xA7\xCC\xB8";
  if(ent=="nge") return "\xE2\x89\xB1";
  if(ent=="ngeq") return "\xE2\x89\xB1";
  if(ent=="ngeqq") return "\xE2\x89\xA7\xCC\xB8";
  if(ent=="ngeqslant") return "\xE2\xA9\xBE\xCC\xB8";
  if(ent=="nges") return "\xE2\xA9\xBE\xCC\xB8";
  if(ent=="nGg") return "\xE2\x8B\x99\xCC\xB8";
  if(ent=="ngsim") return "\xE2\x89\xB5";
  if(ent=="nGt") return "\xE2\x89\xAB\xE2\x83\x92";
  if(ent=="ngt") return "\xE2\x89\xAF";
  if(ent=="ngtr") return "\xE2\x89\xAF";
  if(ent=="nGtv") return "\xE2\x89\xAB\xCC\xB8";
  if(ent=="nhArr") return "\xE2\x87\x8E";
  if(ent=="nharr") return "\xE2\x86\xAE";
  if(ent=="nhpar") return "\xE2\xAB\xB2";
  if(ent=="ni") return "\xE2\x88\x8B";
  if(ent=="nis") return "\xE2\x8B\xBC";
  if(ent=="nisd") return "\xE2\x8B\xBA";
  if(ent=="niv") return "\xE2\x88\x8B";
  if(ent=="NJcy") return "\xD0\x8A";
  if(ent=="njcy") return "\xD1\x9A";
  if(ent=="nlArr") return "\xE2\x87\x8D";
  if(ent=="nlarr") return "\xE2\x86\x9A";
  if(ent=="nldr") return "\xE2\x80\xA5";
  if(ent=="nlE") return "\xE2\x89\xA6\xCC\xB8";
  if(ent=="nle") return "\xE2\x89\xB0";
  if(ent=="nLeftarrow") return "\xE2\x87\x8D";
  if(ent=="nleftarrow") return "\xE2\x86\x9A";
  if(ent=="nLeftrightarrow") return "\xE2\x87\x8E";
  if(ent=="nleftrightarrow") return "\xE2\x86\xAE";
  if(ent=="nleq") return "\xE2\x89\xB0";
  if(ent=="nleqq") return "\xE2\x89\xA6\xCC\xB8";
  if(ent=="nleqslant") return "\xE2\xA9\xBD\xCC\xB8";
  if(ent=="nles") return "\xE2\xA9\xBD\xCC\xB8";
  if(ent=="nless") return "\xE2\x89\xAE";
  if(ent=="nLl") return "\xE2\x8B\x98\xCC\xB8";
  if(ent=="nlsim") return "\xE2\x89\xB4";
  if(ent=="nLt") return "\xE2\x89\xAA\xE2\x83\x92";
  if(ent=="nlt") return "\xE2\x89\xAE";
  if(ent=="nltri") return "\xE2\x8B\xAA";
  if(ent=="nltrie") return "\xE2\x8B\xAC";
  if(ent=="nLtv") return "\xE2\x89\xAA\xCC\xB8";
  if(ent=="nmid") return "\xE2\x88\xA4";
  if(ent=="NoBreak") return "\xE2\x81\xA0";
  if(ent=="NonBreakingSpace") return "\xC2\xA0";
  if(ent=="Nopf") return "\xE2\x84\x95";
  if(ent=="nopf") return "\xED\xA0\xB5\xED\xB5\x9F";
  if(ent=="Not") return "\xE2\xAB\xAC";
  if(ent=="not") return "\xC2\xAC";
  if(ent=="NotCongruent") return "\xE2\x89\xA2";
  if(ent=="NotCupCap") return "\xE2\x89\xAD";
  if(ent=="NotDoubleVerticalBar") return "\xE2\x88\xA6";
  if(ent=="NotElement") return "\xE2\x88\x89";
  if(ent=="NotEqual") return "\xE2\x89\xA0";
  if(ent=="NotEqualTilde") return "\xE2\x89\x82\xCC\xB8";
  if(ent=="NotExists") return "\xE2\x88\x84";
  if(ent=="NotGreater") return "\xE2\x89\xAF";
  if(ent=="NotGreaterEqual") return "\xE2\x89\xB1";
  if(ent=="NotGreaterFullEqual") return "\xE2\x89\xA7\xCC\xB8";
  if(ent=="NotGreaterGreater") return "\xE2\x89\xAB\xCC\xB8";
  if(ent=="NotGreaterLess") return "\xE2\x89\xB9";
  if(ent=="NotGreaterSlantEqual") return "\xE2\xA9\xBE\xCC\xB8";
  if(ent=="NotGreaterTilde") return "\xE2\x89\xB5";
  if(ent=="NotHumpDownHump") return "\xE2\x89\x8E\xCC\xB8";
  if(ent=="NotHumpEqual") return "\xE2\x89\x8F\xCC\xB8";
  if(ent=="notin") return "\xE2\x88\x89";
  if(ent=="notindot") return "\xE2\x8B\xB5\xCC\xB8";
  if(ent=="notinE") return "\xE2\x8B\xB9\xCC\xB8";
  if(ent=="notinva") return "\xE2\x88\x89";
  if(ent=="notinvb") return "\xE2\x8B\xB7";
  if(ent=="notinvc") return "\xE2\x8B\xB6";
  if(ent=="NotLeftTriangle") return "\xE2\x8B\xAA";
  if(ent=="NotLeftTriangleBar") return "\xE2\xA7\x8F\xCC\xB8";
  if(ent=="NotLeftTriangleEqual") return "\xE2\x8B\xAC";
  if(ent=="NotLess") return "\xE2\x89\xAE";
  if(ent=="NotLessEqual") return "\xE2\x89\xB0";
  if(ent=="NotLessGreater") return "\xE2\x89\xB8";
  if(ent=="NotLessLess") return "\xE2\x89\xAA\xCC\xB8";
  if(ent=="NotLessSlantEqual") return "\xE2\xA9\xBD\xCC\xB8";
  if(ent=="NotLessTilde") return "\xE2\x89\xB4";
  if(ent=="NotNestedGreaterGreater") return "\xE2\xAA\xA2\xCC\xB8";
  if(ent=="NotNestedLessLess") return "\xE2\xAA\xA1\xCC\xB8";
  if(ent=="notni") return "\xE2\x88\x8C";
  if(ent=="notniva") return "\xE2\x88\x8C";
  if(ent=="notnivb") return "\xE2\x8B\xBE";
  if(ent=="notnivc") return "\xE2\x8B\xBD";
  if(ent=="NotPrecedes") return "\xE2\x8A\x80";
  if(ent=="NotPrecedesEqual") return "\xE2\xAA\xAF\xCC\xB8";
  if(ent=="NotPrecedesSlantEqual") return "\xE2\x8B\xA0";
  if(ent=="NotReverseElement") return "\xE2\x88\x8C";
  if(ent=="NotRightTriangle") return "\xE2\x8B\xAB";
  if(ent=="NotRightTriangleBar") return "\xE2\xA7\x90\xCC\xB8";
  if(ent=="NotRightTriangleEqual") return "\xE2\x8B\xAD";
  if(ent=="NotSquareSubset") return "\xE2\x8A\x8F\xCC\xB8";
  if(ent=="NotSquareSubsetEqual") return "\xE2\x8B\xA2";
  if(ent=="NotSquareSuperset") return "\xE2\x8A\x90\xCC\xB8";
  if(ent=="NotSquareSupersetEqual") return "\xE2\x8B\xA3";
  if(ent=="NotSubset") return "\xE2\x8A\x82\xE2\x83\x92";
  if(ent=="NotSubsetEqual") return "\xE2\x8A\x88";
  if(ent=="NotSucceeds") return "\xE2\x8A\x81";
  if(ent=="NotSucceedsEqual") return "\xE2\xAA\xB0\xCC\xB8";
  if(ent=="NotSucceedsSlantEqual") return "\xE2\x8B\xA1";
  if(ent=="NotSucceedsTilde") return "\xE2\x89\xBF\xCC\xB8";
  if(ent=="NotSuperset") return "\xE2\x8A\x83\xE2\x83\x92";
  if(ent=="NotSupersetEqual") return "\xE2\x8A\x89";
  if(ent=="NotTilde") return "\xE2\x89\x81";
  if(ent=="NotTildeEqual") return "\xE2\x89\x84";
  if(ent=="NotTildeFullEqual") return "\xE2\x89\x87";
  if(ent=="NotTildeTilde") return "\xE2\x89\x89";
  if(ent=="NotVerticalBar") return "\xE2\x88\xA4";
  if(ent=="npar") return "\xE2\x88\xA6";
  if(ent=="nparallel") return "\xE2\x88\xA6";
  if(ent=="nparsl") return "\xE2\xAB\xBD\xE2\x83\xA5";
  if(ent=="npart") return "\xE2\x88\x82\xCC\xB8";
  if(ent=="npolint") return "\xE2\xA8\x94";
  if(ent=="npr") return "\xE2\x8A\x80";
  if(ent=="nprcue") return "\xE2\x8B\xA0";
  if(ent=="npre") return "\xE2\xAA\xAF\xCC\xB8";
  if(ent=="nprec") return "\xE2\x8A\x80";
  if(ent=="npreceq") return "\xE2\xAA\xAF\xCC\xB8";
  if(ent=="nrArr") return "\xE2\x87\x8F";
  if(ent=="nrarr") return "\xE2\x86\x9B";
  if(ent=="nrarrc") return "\xE2\xA4\xB3\xCC\xB8";
  if(ent=="nrarrw") return "\xE2\x86\x9D\xCC\xB8";
  if(ent=="nRightarrow") return "\xE2\x87\x8F";
  if(ent=="nrightarrow") return "\xE2\x86\x9B";
  if(ent=="nrtri") return "\xE2\x8B\xAB";
  if(ent=="nrtrie") return "\xE2\x8B\xAD";
  if(ent=="nsc") return "\xE2\x8A\x81";
  if(ent=="nsccue") return "\xE2\x8B\xA1";
  if(ent=="nsce") return "\xE2\xAA\xB0\xCC\xB8";
  if(ent=="Nscr") return "\xED\xA0\xB5\xED\xB2\xA9";
  if(ent=="nscr") return "\xED\xA0\xB5\xED\xB3\x83";
  if(ent=="nshortmid") return "\xE2\x88\xA4";
  if(ent=="nshortparallel") return "\xE2\x88\xA6";
  if(ent=="nsim") return "\xE2\x89\x81";
  if(ent=="nsime") return "\xE2\x89\x84";
  if(ent=="nsimeq") return "\xE2\x89\x84";
  if(ent=="nsmid") return "\xE2\x88\xA4";
  if(ent=="nspar") return "\xE2\x88\xA6";
  if(ent=="nsqsube") return "\xE2\x8B\xA2";
  if(ent=="nsqsupe") return "\xE2\x8B\xA3";
  if(ent=="nsub") return "\xE2\x8A\x84";
  if(ent=="nsubE") return "\xE2\xAB\x85\xCC\xB8";
  if(ent=="nsube") return "\xE2\x8A\x88";
  if(ent=="nsubset") return "\xE2\x8A\x82\xE2\x83\x92";
  if(ent=="nsubseteq") return "\xE2\x8A\x88";
  if(ent=="nsubseteqq") return "\xE2\xAB\x85\xCC\xB8";
  if(ent=="nsucc") return "\xE2\x8A\x81";
  if(ent=="nsucceq") return "\xE2\xAA\xB0\xCC\xB8";
  if(ent=="nsup") return "\xE2\x8A\x85";
  if(ent=="nsupE") return "\xE2\xAB\x86\xCC\xB8";
  if(ent=="nsupe") return "\xE2\x8A\x89";
  if(ent=="nsupset") return "\xE2\x8A\x83\xE2\x83\x92";
  if(ent=="nsupseteq") return "\xE2\x8A\x89";
  if(ent=="nsupseteqq") return "\xE2\xAB\x86\xCC\xB8";
  if(ent=="ntgl") return "\xE2\x89\xB9";
  if(ent=="Ntilde") return "\xC3\x91";
  if(ent=="ntilde") return "\xC3\xB1";
  if(ent=="ntlg") return "\xE2\x89\xB8";
  if(ent=="ntriangleleft") return "\xE2\x8B\xAA";
  if(ent=="ntrianglelefteq") return "\xE2\x8B\xAC";
  if(ent=="ntriangleright") return "\xE2\x8B\xAB";
  if(ent=="ntrianglerighteq") return "\xE2\x8B\xAD";
  if(ent=="Nu") return "\xCE\x9D";
  if(ent=="nu") return "\xCE\xBD";
  if(ent=="num") return "#";
  if(ent=="numero") return "\xE2\x84\x96";
  if(ent=="numsp") return "\xE2\x80\x87";
  if(ent=="nvap") return "\xE2\x89\x8D\xE2\x83\x92";
  if(ent=="nVDash") return "\xE2\x8A\xAF";
  if(ent=="nVdash") return "\xE2\x8A\xAE";
  if(ent=="nvDash") return "\xE2\x8A\xAD";
  if(ent=="nvdash") return "\xE2\x8A\xAC";
  if(ent=="nvge") return "\xE2\x89\xA5\xE2\x83\x92";
  if(ent=="nvgt") return ">\xE2\x83\x92";
  if(ent=="nvHarr") return "\xE2\xA4\x84";
  if(ent=="nvinfin") return "\xE2\xA7\x9E";
  if(ent=="nvlArr") return "\xE2\xA4\x82";
  if(ent=="nvle") return "\xE2\x89\xA4\xE2\x83\x92";
  if(ent=="nvlt") return "<\xE2\x83\x92";
  if(ent=="nvltrie") return "\xE2\x8A\xB4\xE2\x83\x92";
  if(ent=="nvrArr") return "\xE2\xA4\x83";
  if(ent=="nvrtrie") return "\xE2\x8A\xB5\xE2\x83\x92";
  if(ent=="nvsim") return "\xE2\x88\xBC\xE2\x83\x92";
  if(ent=="nwarhk") return "\xE2\xA4\xA3";
  if(ent=="nwArr") return "\xE2\x87\x96";
  if(ent=="nwarr") return "\xE2\x86\x96";
  if(ent=="nwarrow") return "\xE2\x86\x96";
  if(ent=="nwnear") return "\xE2\xA4\xA7";
  if(ent=="Oacute") return "\xC3\x93";
  if(ent=="oacute") return "\xC3\xB3";
  if(ent=="oast") return "\xE2\x8A\x9B";
  if(ent=="ocir") return "\xE2\x8A\x9A";
  if(ent=="Ocirc") return "\xC3\x94";
  if(ent=="ocirc") return "\xC3\xB4";
  if(ent=="Ocy") return "\xD0\x9E";
  if(ent=="ocy") return "\xD0\xBE";
  if(ent=="odash") return "\xE2\x8A\x9D";
  if(ent=="Odblac") return "\xC5\x90";
  if(ent=="odblac") return "\xC5\x91";
  if(ent=="odiv") return "\xE2\xA8\xB8";
  if(ent=="odot") return "\xE2\x8A\x99";
  if(ent=="odsold") return "\xE2\xA6\xBC";
  if(ent=="OElig") return "\xC5\x92";
  if(ent=="oelig") return "\xC5\x93";
  if(ent=="ofcir") return "\xE2\xA6\xBF";
  if(ent=="Ofr") return "\xED\xA0\xB5\xED\xB4\x92";
  if(ent=="ofr") return "\xED\xA0\xB5\xED\xB4\xAC";
  if(ent=="ogon") return "\xCB\x9B";
  if(ent=="Ograve") return "\xC3\x92";
  if(ent=="ograve") return "\xC3\xB2";
  if(ent=="ogt") return "\xE2\xA7\x81";
  if(ent=="ohbar") return "\xE2\xA6\xB5";
  if(ent=="ohm") return "\xCE\xA9";
  if(ent=="oint") return "\xE2\x88\xAE";
  if(ent=="olarr") return "\xE2\x86\xBA";
  if(ent=="olcir") return "\xE2\xA6\xBE";
  if(ent=="olcross") return "\xE2\xA6\xBB";
  if(ent=="oline") return "\xE2\x80\xBE";
  if(ent=="olt") return "\xE2\xA7\x80";
  if(ent=="Omacr") return "\xC5\x8C";
  if(ent=="omacr") return "\xC5\x8D";
  if(ent=="Omega") return "\xCE\xA9";
  if(ent=="omega") return "\xCF\x89";
  if(ent=="Omicron") return "\xCE\x9F";
  if(ent=="omicron") return "\xCE\xBF";
  if(ent=="omid") return "\xE2\xA6\xB6";
  if(ent=="ominus") return "\xE2\x8A\x96";
  if(ent=="Oopf") return "\xED\xA0\xB5\xED\xB5\x86";
  if(ent=="oopf") return "\xED\xA0\xB5\xED\xB5\xA0";
  if(ent=="opar") return "\xE2\xA6\xB7";
  if(ent=="OpenCurlyDoubleQuote") return "\xE2\x80\x9C";
  if(ent=="OpenCurlyQuote") return "\xE2\x80\x98";
  if(ent=="operp") return "\xE2\xA6\xB9";
  if(ent=="oplus") return "\xE2\x8A\x95";
  if(ent=="Or") return "\xE2\xA9\x94";
  if(ent=="or") return "\xE2\x88\xA8";
  if(ent=="orarr") return "\xE2\x86\xBB";
  if(ent=="ord") return "\xE2\xA9\x9D";
  if(ent=="order") return "\xE2\x84\xB4";
  if(ent=="orderof") return "\xE2\x84\xB4";
  if(ent=="ordf") return "\xC2\xAA";
  if(ent=="ordm") return "\xC2\xBA";
  if(ent=="origof") return "\xE2\x8A\xB6";
  if(ent=="oror") return "\xE2\xA9\x96";
  if(ent=="orslope") return "\xE2\xA9\x97";
  if(ent=="orv") return "\xE2\xA9\x9B";
  if(ent=="oS") return "\xE2\x93\x88";
  if(ent=="Oscr") return "\xED\xA0\xB5\xED\xB2\xAA";
  if(ent=="oscr") return "\xE2\x84\xB4";
  if(ent=="Oslash") return "\xC3\x98";
  if(ent=="oslash") return "\xC3\xB8";
  if(ent=="osol") return "\xE2\x8A\x98";
  if(ent=="Otilde") return "\xC3\x95";
  if(ent=="otilde") return "\xC3\xB5";
  if(ent=="Otimes") return "\xE2\xA8\xB7";
  if(ent=="otimes") return "\xE2\x8A\x97";
  if(ent=="otimesas") return "\xE2\xA8\xB6";
  if(ent=="Ouml") return "\xC3\x96";
  if(ent=="ouml") return "\xC3\xB6";
  if(ent=="ovbar") return "\xE2\x8C\xBD";
  if(ent=="OverBar") return "\xE2\x80\xBE";
  if(ent=="OverBrace") return "\xE2\x8F\x9E";
  if(ent=="OverBracket") return "\xE2\x8E\xB4";
  if(ent=="OverParenthesis") return "\xE2\x8F\x9C";
  if(ent=="par") return "\xE2\x88\xA5";
  if(ent=="para") return "\xC2\xB6";
  if(ent=="parallel") return "\xE2\x88\xA5";
  if(ent=="parsim") return "\xE2\xAB\xB3";
  if(ent=="parsl") return "\xE2\xAB\xBD";
  if(ent=="part") return "\xE2\x88\x82";
  if(ent=="PartialD") return "\xE2\x88\x82";
  if(ent=="Pcy") return "\xD0\x9F";
  if(ent=="pcy") return "\xD0\xBF";
  if(ent=="percnt") return "%";
  if(ent=="period") return ".";
  if(ent=="permil") return "\xE2\x80\xB0";
  if(ent=="perp") return "\xE2\x8A\xA5";
  if(ent=="pertenk") return "\xE2\x80\xB1";
  if(ent=="Pfr") return "\xED\xA0\xB5\xED\xB4\x93";
  if(ent=="pfr") return "\xED\xA0\xB5\xED\xB4\xAD";
  if(ent=="Phi") return "\xCE\xA6";
  if(ent=="phi") return "\xCF\x86";
  if(ent=="phiv") return "\xCF\x95";
  if(ent=="phmmat") return "\xE2\x84\xB3";
  if(ent=="phone") return "\xE2\x98\x8E";
  if(ent=="Pi") return "\xCE\xA0";
  if(ent=="pi") return "\xCF\x80";
  if(ent=="pitchfork") return "\xE2\x8B\x94";
  if(ent=="piv") return "\xCF\x96";
  if(ent=="planck") return "\xE2\x84\x8F";
  if(ent=="planckh") return "\xE2\x84\x8E";
  if(ent=="plankv") return "\xE2\x84\x8F";
  if(ent=="plus") return "+";
  if(ent=="plusacir") return "\xE2\xA8\xA3";
  if(ent=="plusb") return "\xE2\x8A\x9E";
  if(ent=="pluscir") return "\xE2\xA8\xA2";
  if(ent=="plusdo") return "\xE2\x88\x94";
  if(ent=="plusdu") return "\xE2\xA8\xA5";
  if(ent=="pluse") return "\xE2\xA9\xB2";
  if(ent=="PlusMinus") return "\xC2\xB1";
  if(ent=="plusmn") return "\xC2\xB1";
  if(ent=="plussim") return "\xE2\xA8\xA6";
  if(ent=="plustwo") return "\xE2\xA8\xA7";
  if(ent=="pm") return "\xC2\xB1";
  if(ent=="Poincareplane") return "\xE2\x84\x8C";
  if(ent=="pointint") return "\xE2\xA8\x95";
  if(ent=="Popf") return "\xE2\x84\x99";
  if(ent=="popf") return "\xED\xA0\xB5\xED\xB5\xA1";
  if(ent=="pound") return "\xC2\xA3";
  if(ent=="Pr") return "\xE2\xAA\xBB";
  if(ent=="pr") return "\xE2\x89\xBA";
  if(ent=="prap") return "\xE2\xAA\xB7";
  if(ent=="prcue") return "\xE2\x89\xBC";
  if(ent=="prE") return "\xE2\xAA\xB3";
  if(ent=="pre") return "\xE2\xAA\xAF";
  if(ent=="prec") return "\xE2\x89\xBA";
  if(ent=="precapprox") return "\xE2\xAA\xB7";
  if(ent=="preccurlyeq") return "\xE2\x89\xBC";
  if(ent=="Precedes") return "\xE2\x89\xBA";
  if(ent=="PrecedesEqual") return "\xE2\xAA\xAF";
  if(ent=="PrecedesSlantEqual") return "\xE2\x89\xBC";
  if(ent=="PrecedesTilde") return "\xE2\x89\xBE";
  if(ent=="preceq") return "\xE2\xAA\xAF";
  if(ent=="precnapprox") return "\xE2\xAA\xB9";
  if(ent=="precneqq") return "\xE2\xAA\xB5";
  if(ent=="precnsim") return "\xE2\x8B\xA8";
  if(ent=="precsim") return "\xE2\x89\xBE";
  if(ent=="Prime") return "\xE2\x80\xB3";
  if(ent=="prime") return "\xE2\x80\xB2";
  if(ent=="primes") return "\xE2\x84\x99";
  if(ent=="prnap") return "\xE2\xAA\xB9";
  if(ent=="prnE") return "\xE2\xAA\xB5";
  if(ent=="prnsim") return "\xE2\x8B\xA8";
  if(ent=="prod") return "\xE2\x88\x8F";
  if(ent=="Product") return "\xE2\x88\x8F";
  if(ent=="profalar") return "\xE2\x8C\xAE";
  if(ent=="profline") return "\xE2\x8C\x92";
  if(ent=="profsurf") return "\xE2\x8C\x93";
  if(ent=="prop") return "\xE2\x88\x9D";
  if(ent=="Proportion") return "\xE2\x88\xB7";
  if(ent=="Proportional") return "\xE2\x88\x9D";
  if(ent=="propto") return "\xE2\x88\x9D";
  if(ent=="prsim") return "\xE2\x89\xBE";
  if(ent=="prurel") return "\xE2\x8A\xB0";
  if(ent=="Pscr") return "\xED\xA0\xB5\xED\xB2\xAB";
  if(ent=="pscr") return "\xED\xA0\xB5\xED\xB3\x85";
  if(ent=="Psi") return "\xCE\xA8";
  if(ent=="psi") return "\xCF\x88";
  if(ent=="puncsp") return "\xE2\x80\x88";
  if(ent=="Qfr") return "\xED\xA0\xB5\xED\xB4\x94";
  if(ent=="qfr") return "\xED\xA0\xB5\xED\xB4\xAE";
  if(ent=="qint") return "\xE2\xA8\x8C";
  if(ent=="Qopf") return "\xE2\x84\x9A";
  if(ent=="qopf") return "\xED\xA0\xB5\xED\xB5\xA2";
  if(ent=="qprime") return "\xE2\x81\x97";
  if(ent=="Qscr") return "\xED\xA0\xB5\xED\xB2\xAC";
  if(ent=="qscr") return "\xED\xA0\xB5\xED\xB3\x86";
  if(ent=="quaternions") return "\xE2\x84\x8D";
  if(ent=="quatint") return "\xE2\xA8\x96";
  if(ent=="quest") return "?";
  if(ent=="questeq") return "\xE2\x89\x9F";
  if(ent=="QUOT") return "\"";
  if(ent=="quot") return "\"";
  if(ent=="rAarr") return "\xE2\x87\x9B";
  if(ent=="race") return "\xE2\x88\xBD\xCC\xB1";
  if(ent=="Racute") return "\xC5\x94";
  if(ent=="racute") return "\xC5\x95";
  if(ent=="radic") return "\xE2\x88\x9A";
  if(ent=="raemptyv") return "\xE2\xA6\xB3";
  if(ent=="Rang") return "\xE2\x9F\xAB";
  if(ent=="rang") return "\xE2\x9F\xA9";
  if(ent=="rangd") return "\xE2\xA6\x92";
  if(ent=="range") return "\xE2\xA6\xA5";
  if(ent=="rangle") return "\xE2\x9F\xA9";
  if(ent=="raquo") return "\xC2\xBB";
  if(ent=="Rarr") return "\xE2\x86\xA0";
  if(ent=="rArr") return "\xE2\x87\x92";
  if(ent=="rarr") return "\xE2\x86\x92";
  if(ent=="rarrap") return "\xE2\xA5\xB5";
  if(ent=="rarrb") return "\xE2\x87\xA5";
  if(ent=="rarrbfs") return "\xE2\xA4\xA0";
  if(ent=="rarrc") return "\xE2\xA4\xB3";
  if(ent=="rarrfs") return "\xE2\xA4\x9E";
  if(ent=="rarrhk") return "\xE2\x86\xAA";
  if(ent=="rarrlp") return "\xE2\x86\xAC";
  if(ent=="rarrpl") return "\xE2\xA5\x85";
  if(ent=="rarrsim") return "\xE2\xA5\xB4";
  if(ent=="Rarrtl") return "\xE2\xA4\x96";
  if(ent=="rarrtl") return "\xE2\x86\xA3";
  if(ent=="rarrw") return "\xE2\x86\x9D";
  if(ent=="rAtail") return "\xE2\xA4\x9C";
  if(ent=="ratail") return "\xE2\xA4\x9A";
  if(ent=="ratio") return "\xE2\x88\xB6";
  if(ent=="rationals") return "\xE2\x84\x9A";
  if(ent=="RBarr") return "\xE2\xA4\x90";
  if(ent=="rBarr") return "\xE2\xA4\x8F";
  if(ent=="rbarr") return "\xE2\xA4\x8D";
  if(ent=="rbbrk") return "\xE2\x9D\xB3";
  if(ent=="rbrace") return "}";
  if(ent=="rbrack") return "]";
  if(ent=="rbrke") return "\xE2\xA6\x8C";
  if(ent=="rbrksld") return "\xE2\xA6\x8E";
  if(ent=="rbrkslu") return "\xE2\xA6\x90";
  if(ent=="Rcaron") return "\xC5\x98";
  if(ent=="rcaron") return "\xC5\x99";
  if(ent=="Rcedil") return "\xC5\x96";
  if(ent=="rcedil") return "\xC5\x97";
  if(ent=="rceil") return "\xE2\x8C\x89";
  if(ent=="rcub") return "}";
  if(ent=="Rcy") return "\xD0\xA0";
  if(ent=="rcy") return "\xD1\x80";
  if(ent=="rdca") return "\xE2\xA4\xB7";
  if(ent=="rdldhar") return "\xE2\xA5\xA9";
  if(ent=="rdquo") return "\xE2\x80\x9D";
  if(ent=="rdquor") return "\xE2\x80\x9D";
  if(ent=="rdsh") return "\xE2\x86\xB3";
  if(ent=="Re") return "\xE2\x84\x9C";
  if(ent=="real") return "\xE2\x84\x9C";
  if(ent=="realine") return "\xE2\x84\x9B";
  if(ent=="realpart") return "\xE2\x84\x9C";
  if(ent=="reals") return "\xE2\x84\x9D";
  if(ent=="rect") return "\xE2\x96\xAD";
  if(ent=="REG") return "\xC2\xAE";
  if(ent=="reg") return "\xC2\xAE";
  if(ent=="ReverseElement") return "\xE2\x88\x8B";
  if(ent=="ReverseEquilibrium") return "\xE2\x87\x8B";
  if(ent=="ReverseUpEquilibrium") return "\xE2\xA5\xAF";
  if(ent=="rfisht") return "\xE2\xA5\xBD";
  if(ent=="rfloor") return "\xE2\x8C\x8B";
  if(ent=="Rfr") return "\xE2\x84\x9C";
  if(ent=="rfr") return "\xED\xA0\xB5\xED\xB4\xAF";
  if(ent=="rHar") return "\xE2\xA5\xA4";
  if(ent=="rhard") return "\xE2\x87\x81";
  if(ent=="rharu") return "\xE2\x87\x80";
  if(ent=="rharul") return "\xE2\xA5\xAC";
  if(ent=="Rho") return "\xCE\xA1";
  if(ent=="rho") return "\xCF\x81";
  if(ent=="rhov") return "\xCF\xB1";
  if(ent=="RightAngleBracket") return "\xE2\x9F\xA9";
  if(ent=="RightArrow") return "\xE2\x86\x92";
  if(ent=="Rightarrow") return "\xE2\x87\x92";
  if(ent=="rightarrow") return "\xE2\x86\x92";
  if(ent=="RightArrowBar") return "\xE2\x87\xA5";
  if(ent=="RightArrowLeftArrow") return "\xE2\x87\x84";
  if(ent=="rightarrowtail") return "\xE2\x86\xA3";
  if(ent=="RightCeiling") return "\xE2\x8C\x89";
  if(ent=="RightDoubleBracket") return "\xE2\x9F\xA7";
  if(ent=="RightDownTeeVector") return "\xE2\xA5\x9D";
  if(ent=="RightDownVector") return "\xE2\x87\x82";
  if(ent=="RightDownVectorBar") return "\xE2\xA5\x95";
  if(ent=="RightFloor") return "\xE2\x8C\x8B";
  if(ent=="rightharpoondown") return "\xE2\x87\x81";
  if(ent=="rightharpoonup") return "\xE2\x87\x80";
  if(ent=="rightleftarrows") return "\xE2\x87\x84";
  if(ent=="rightleftharpoons") return "\xE2\x87\x8C";
  if(ent=="rightrightarrows") return "\xE2\x87\x89";
  if(ent=="rightsquigarrow") return "\xE2\x86\x9D";
  if(ent=="RightTee") return "\xE2\x8A\xA2";
  if(ent=="RightTeeArrow") return "\xE2\x86\xA6";
  if(ent=="RightTeeVector") return "\xE2\xA5\x9B";
  if(ent=="rightthreetimes") return "\xE2\x8B\x8C";
  if(ent=="RightTriangle") return "\xE2\x8A\xB3";
  if(ent=="RightTriangleBar") return "\xE2\xA7\x90";
  if(ent=="RightTriangleEqual") return "\xE2\x8A\xB5";
  if(ent=="RightUpDownVector") return "\xE2\xA5\x8F";
  if(ent=="RightUpTeeVector") return "\xE2\xA5\x9C";
  if(ent=="RightUpVector") return "\xE2\x86\xBE";
  if(ent=="RightUpVectorBar") return "\xE2\xA5\x94";
  if(ent=="RightVector") return "\xE2\x87\x80";
  if(ent=="RightVectorBar") return "\xE2\xA5\x93";
  if(ent=="ring") return "\xCB\x9A";
  if(ent=="risingdotseq") return "\xE2\x89\x93";
  if(ent=="rlarr") return "\xE2\x87\x84";
  if(ent=="rlhar") return "\xE2\x87\x8C";
  if(ent=="rlm") return "\xE2\x80\x8F";
  if(ent=="rmoust") return "\xE2\x8E\xB1";
  if(ent=="rmoustache") return "\xE2\x8E\xB1";
  if(ent=="rnmid") return "\xE2\xAB\xAE";
  if(ent=="roang") return "\xE2\x9F\xAD";
  if(ent=="roarr") return "\xE2\x87\xBE";
  if(ent=="robrk") return "\xE2\x9F\xA7";
  if(ent=="ropar") return "\xE2\xA6\x86";
  if(ent=="Ropf") return "\xE2\x84\x9D";
  if(ent=="ropf") return "\xED\xA0\xB5\xED\xB5\xA3";
  if(ent=="roplus") return "\xE2\xA8\xAE";
  if(ent=="rotimes") return "\xE2\xA8\xB5";
  if(ent=="RoundImplies") return "\xE2\xA5\xB0";
  if(ent=="rpar") return ")";
  if(ent=="rpargt") return "\xE2\xA6\x94";
  if(ent=="rppolint") return "\xE2\xA8\x92";
  if(ent=="rrarr") return "\xE2\x87\x89";
  if(ent=="Rrightarrow") return "\xE2\x87\x9B";
  if(ent=="rsaquo") return "\xE2\x80\xBA";
  if(ent=="Rscr") return "\xE2\x84\x9B";
  if(ent=="rscr") return "\xED\xA0\xB5\xED\xB3\x87";
  if(ent=="Rsh") return "\xE2\x86\xB1";
  if(ent=="rsh") return "\xE2\x86\xB1";
  if(ent=="rsqb") return "]";
  if(ent=="rsquo") return "\xE2\x80\x99";
  if(ent=="rsquor") return "\xE2\x80\x99";
  if(ent=="rthree") return "\xE2\x8B\x8C";
  if(ent=="rtimes") return "\xE2\x8B\x8A";
  if(ent=="rtri") return "\xE2\x96\xB9";
  if(ent=="rtrie") return "\xE2\x8A\xB5";
  if(ent=="rtrif") return "\xE2\x96\xB8";
  if(ent=="rtriltri") return "\xE2\xA7\x8E";
  if(ent=="RuleDelayed") return "\xE2\xA7\xB4";
  if(ent=="ruluhar") return "\xE2\xA5\xA8";
  if(ent=="rx") return "\xE2\x84\x9E";
  if(ent=="Sacute") return "\xC5\x9A";
  if(ent=="sacute") return "\xC5\x9B";
  if(ent=="sbquo") return "\xE2\x80\x9A";
  if(ent=="Sc") return "\xE2\xAA\xBC";
  if(ent=="sc") return "\xE2\x89\xBB";
  if(ent=="scap") return "\xE2\xAA\xB8";
  if(ent=="Scaron") return "\xC5\xA0";
  if(ent=="scaron") return "\xC5\xA1";
  if(ent=="sccue") return "\xE2\x89\xBD";
  if(ent=="scE") return "\xE2\xAA\xB4";
  if(ent=="sce") return "\xE2\xAA\xB0";
  if(ent=="Scedil") return "\xC5\x9E";
  if(ent=="scedil") return "\xC5\x9F";
  if(ent=="Scirc") return "\xC5\x9C";
  if(ent=="scirc") return "\xC5\x9D";
  if(ent=="scnap") return "\xE2\xAA\xBA";
  if(ent=="scnE") return "\xE2\xAA\xB6";
  if(ent=="scnsim") return "\xE2\x8B\xA9";
  if(ent=="scpolint") return "\xE2\xA8\x93";
  if(ent=="scsim") return "\xE2\x89\xBF";
  if(ent=="Scy") return "\xD0\xA1";
  if(ent=="scy") return "\xD1\x81";
  if(ent=="sdot") return "\xE2\x8B\x85";
  if(ent=="sdotb") return "\xE2\x8A\xA1";
  if(ent=="sdote") return "\xE2\xA9\xA6";
  if(ent=="searhk") return "\xE2\xA4\xA5";
  if(ent=="seArr") return "\xE2\x87\x98";
  if(ent=="searr") return "\xE2\x86\x98";
  if(ent=="searrow") return "\xE2\x86\x98";
  if(ent=="sect") return "\xC2\xA7";
  if(ent=="semi") return ";";
  if(ent=="seswar") return "\xE2\xA4\xA9";
  if(ent=="setminus") return "\xE2\x88\x96";
  if(ent=="setmn") return "\xE2\x88\x96";
  if(ent=="sext") return "\xE2\x9C\xB6";
  if(ent=="Sfr") return "\xED\xA0\xB5\xED\xB4\x96";
  if(ent=="sfr") return "\xED\xA0\xB5\xED\xB4\xB0";
  if(ent=="sfrown") return "\xE2\x8C\xA2";
  if(ent=="sharp") return "\xE2\x99\xAF";
  if(ent=="SHCHcy") return "\xD0\xA9";
  if(ent=="shchcy") return "\xD1\x89";
  if(ent=="SHcy") return "\xD0\xA8";
  if(ent=="shcy") return "\xD1\x88";
  if(ent=="ShortDownArrow") return "\xE2\x86\x93";
  if(ent=="ShortLeftArrow") return "\xE2\x86\x90";
  if(ent=="shortmid") return "\xE2\x88\xA3";
  if(ent=="shortparallel") return "\xE2\x88\xA5";
  if(ent=="ShortRightArrow") return "\xE2\x86\x92";
  if(ent=="ShortUpArrow") return "\xE2\x86\x91";
  if(ent=="shy") return "\xC2\xAD";
  if(ent=="Sigma") return "\xCE\xA3";
  if(ent=="sigma") return "\xCF\x83";
  if(ent=="sigmaf") return "\xCF\x82";
  if(ent=="sigmav") return "\xCF\x82";
  if(ent=="sim") return "\xE2\x88\xBC";
  if(ent=="simdot") return "\xE2\xA9\xAA";
  if(ent=="sime") return "\xE2\x89\x83";
  if(ent=="simeq") return "\xE2\x89\x83";
  if(ent=="simg") return "\xE2\xAA\x9E";
  if(ent=="simgE") return "\xE2\xAA\xA0";
  if(ent=="siml") return "\xE2\xAA\x9D";
  if(ent=="simlE") return "\xE2\xAA\x9F";
  if(ent=="simne") return "\xE2\x89\x86";
  if(ent=="simplus") return "\xE2\xA8\xA4";
  if(ent=="simrarr") return "\xE2\xA5\xB2";
  if(ent=="slarr") return "\xE2\x86\x90";
  if(ent=="SmallCircle") return "\xE2\x88\x98";
  if(ent=="smallsetminus") return "\xE2\x88\x96";
  if(ent=="smashp") return "\xE2\xA8\xB3";
  if(ent=="smeparsl") return "\xE2\xA7\xA4";
  if(ent=="smid") return "\xE2\x88\xA3";
  if(ent=="smile") return "\xE2\x8C\xA3";
  if(ent=="smt") return "\xE2\xAA\xAA";
  if(ent=="smte") return "\xE2\xAA\xAC";
  if(ent=="smtes") return "\xE2\xAA\xAC\xEF\xB8\x80";
  if(ent=="SOFTcy") return "\xD0\xAC";
  if(ent=="softcy") return "\xD1\x8C";
  if(ent=="sol") return "/";
  if(ent=="solb") return "\xE2\xA7\x84";
  if(ent=="solbar") return "\xE2\x8C\xBF";
  if(ent=="Sopf") return "\xED\xA0\xB5\xED\xB5\x8A";
  if(ent=="sopf") return "\xED\xA0\xB5\xED\xB5\xA4";
  if(ent=="spades") return "\xE2\x99\xA0";
  if(ent=="spadesuit") return "\xE2\x99\xA0";
  if(ent=="spar") return "\xE2\x88\xA5";
  if(ent=="sqcap") return "\xE2\x8A\x93";
  if(ent=="sqcaps") return "\xE2\x8A\x93\xEF\xB8\x80";
  if(ent=="sqcup") return "\xE2\x8A\x94";
  if(ent=="sqcups") return "\xE2\x8A\x94\xEF\xB8\x80";
  if(ent=="Sqrt") return "\xE2\x88\x9A";
  if(ent=="sqsub") return "\xE2\x8A\x8F";
  if(ent=="sqsube") return "\xE2\x8A\x91";
  if(ent=="sqsubset") return "\xE2\x8A\x8F";
  if(ent=="sqsubseteq") return "\xE2\x8A\x91";
  if(ent=="sqsup") return "\xE2\x8A\x90";
  if(ent=="sqsupe") return "\xE2\x8A\x92";
  if(ent=="sqsupset") return "\xE2\x8A\x90";
  if(ent=="sqsupseteq") return "\xE2\x8A\x92";
  if(ent=="squ") return "\xE2\x96\xA1";
  if(ent=="Square") return "\xE2\x96\xA1";
  if(ent=="square") return "\xE2\x96\xA1";
  if(ent=="SquareIntersection") return "\xE2\x8A\x93";
  if(ent=="SquareSubset") return "\xE2\x8A\x8F";
  if(ent=="SquareSubsetEqual") return "\xE2\x8A\x91";
  if(ent=="SquareSuperset") return "\xE2\x8A\x90";
  if(ent=="SquareSupersetEqual") return "\xE2\x8A\x92";
  if(ent=="SquareUnion") return "\xE2\x8A\x94";
  if(ent=="squarf") return "\xE2\x96\xAA";
  if(ent=="squf") return "\xE2\x96\xAA";
  if(ent=="srarr") return "\xE2\x86\x92";
  if(ent=="Sscr") return "\xED\xA0\xB5\xED\xB2\xAE";
  if(ent=="sscr") return "\xED\xA0\xB5\xED\xB3\x88";
  if(ent=="ssetmn") return "\xE2\x88\x96";
  if(ent=="ssmile") return "\xE2\x8C\xA3";
  if(ent=="sstarf") return "\xE2\x8B\x86";
  if(ent=="Star") return "\xE2\x8B\x86";
  if(ent=="star") return "\xE2\x98\x86";
  if(ent=="starf") return "\xE2\x98\x85";
  if(ent=="straightepsilon") return "\xCF\xB5";
  if(ent=="straightphi") return "\xCF\x95";
  if(ent=="strns") return "\xC2\xAF";
  if(ent=="Sub") return "\xE2\x8B\x90";
  if(ent=="sub") return "\xE2\x8A\x82";
  if(ent=="subdot") return "\xE2\xAA\xBD";
  if(ent=="subE") return "\xE2\xAB\x85";
  if(ent=="sube") return "\xE2\x8A\x86";
  if(ent=="subedot") return "\xE2\xAB\x83";
  if(ent=="submult") return "\xE2\xAB\x81";
  if(ent=="subnE") return "\xE2\xAB\x8B";
  if(ent=="subne") return "\xE2\x8A\x8A";
  if(ent=="subplus") return "\xE2\xAA\xBF";
  if(ent=="subrarr") return "\xE2\xA5\xB9";
  if(ent=="Subset") return "\xE2\x8B\x90";
  if(ent=="subset") return "\xE2\x8A\x82";
  if(ent=="subseteq") return "\xE2\x8A\x86";
  if(ent=="subseteqq") return "\xE2\xAB\x85";
  if(ent=="SubsetEqual") return "\xE2\x8A\x86";
  if(ent=="subsetneq") return "\xE2\x8A\x8A";
  if(ent=="subsetneqq") return "\xE2\xAB\x8B";
  if(ent=="subsim") return "\xE2\xAB\x87";
  if(ent=="subsub") return "\xE2\xAB\x95";
  if(ent=="subsup") return "\xE2\xAB\x93";
  if(ent=="succ") return "\xE2\x89\xBB";
  if(ent=="succapprox") return "\xE2\xAA\xB8";
  if(ent=="succcurlyeq") return "\xE2\x89\xBD";
  if(ent=="Succeeds") return "\xE2\x89\xBB";
  if(ent=="SucceedsEqual") return "\xE2\xAA\xB0";
  if(ent=="SucceedsSlantEqual") return "\xE2\x89\xBD";
  if(ent=="SucceedsTilde") return "\xE2\x89\xBF";
  if(ent=="succeq") return "\xE2\xAA\xB0";
  if(ent=="succnapprox") return "\xE2\xAA\xBA";
  if(ent=="succneqq") return "\xE2\xAA\xB6";
  if(ent=="succnsim") return "\xE2\x8B\xA9";
  if(ent=="succsim") return "\xE2\x89\xBF";
  if(ent=="SuchThat") return "\xE2\x88\x8B";
  if(ent=="Sum") return "\xE2\x88\x91";
  if(ent=="sum") return "\xE2\x88\x91";
  if(ent=="sung") return "\xE2\x99\xAA";
  if(ent=="Sup") return "\xE2\x8B\x91";
  if(ent=="sup") return "\xE2\x8A\x83";
  if(ent=="sup1") return "\xC2\xB9";
  if(ent=="sup2") return "\xC2\xB2";
  if(ent=="sup3") return "\xC2\xB3";
  if(ent=="supdot") return "\xE2\xAA\xBE";
  if(ent=="supdsub") return "\xE2\xAB\x98";
  if(ent=="supE") return "\xE2\xAB\x86";
  if(ent=="supe") return "\xE2\x8A\x87";
  if(ent=="supedot") return "\xE2\xAB\x84";
  if(ent=="Superset") return "\xE2\x8A\x83";
  if(ent=="SupersetEqual") return "\xE2\x8A\x87";
  if(ent=="suphsol") return "\xE2\x9F\x89";
  if(ent=="suphsub") return "\xE2\xAB\x97";
  if(ent=="suplarr") return "\xE2\xA5\xBB";
  if(ent=="supmult") return "\xE2\xAB\x82";
  if(ent=="supnE") return "\xE2\xAB\x8C";
  if(ent=="supne") return "\xE2\x8A\x8B";
  if(ent=="supplus") return "\xE2\xAB\x80";
  if(ent=="Supset") return "\xE2\x8B\x91";
  if(ent=="supset") return "\xE2\x8A\x83";
  if(ent=="supseteq") return "\xE2\x8A\x87";
  if(ent=="supseteqq") return "\xE2\xAB\x86";
  if(ent=="supsetneq") return "\xE2\x8A\x8B";
  if(ent=="supsetneqq") return "\xE2\xAB\x8C";
  if(ent=="supsim") return "\xE2\xAB\x88";
  if(ent=="supsub") return "\xE2\xAB\x94";
  if(ent=="supsup") return "\xE2\xAB\x96";
  if(ent=="swarhk") return "\xE2\xA4\xA6";
  if(ent=="swArr") return "\xE2\x87\x99";
  if(ent=="swarr") return "\xE2\x86\x99";
  if(ent=="swarrow") return "\xE2\x86\x99";
  if(ent=="swnwar") return "\xE2\xA4\xAA";
  if(ent=="szlig") return "\xC3\x9F";
  if(ent=="Tab") return "	";
  if(ent=="target") return "\xE2\x8C\x96";
  if(ent=="Tau") return "\xCE\xA4";
  if(ent=="tau") return "\xCF\x84";
  if(ent=="tbrk") return "\xE2\x8E\xB4";
  if(ent=="Tcaron") return "\xC5\xA4";
  if(ent=="tcaron") return "\xC5\xA5";
  if(ent=="Tcedil") return "\xC5\xA2";
  if(ent=="tcedil") return "\xC5\xA3";
  if(ent=="Tcy") return "\xD0\xA2";
  if(ent=="tcy") return "\xD1\x82";
  if(ent=="tdot") return "\xE2\x83\x9B";
  if(ent=="telrec") return "\xE2\x8C\x95";
  if(ent=="Tfr") return "\xED\xA0\xB5\xED\xB4\x97";
  if(ent=="tfr") return "\xED\xA0\xB5\xED\xB4\xB1";
  if(ent=="there4") return "\xE2\x88\xB4";
  if(ent=="Therefore") return "\xE2\x88\xB4";
  if(ent=="therefore") return "\xE2\x88\xB4";
  if(ent=="Theta") return "\xCE\x98";
  if(ent=="theta") return "\xCE\xB8";
  if(ent=="thetasym") return "\xCF\x91";
  if(ent=="thetav") return "\xCF\x91";
  if(ent=="thickapprox") return "\xE2\x89\x88";
  if(ent=="thicksim") return "\xE2\x88\xBC";
  if(ent=="ThickSpace") return "\xE2\x81\x9F\xE2\x80\x8A";
  if(ent=="thinsp") return "\xE2\x80\x89";
  if(ent=="ThinSpace") return "\xE2\x80\x89";
  if(ent=="thkap") return "\xE2\x89\x88";
  if(ent=="thksim") return "\xE2\x88\xBC";
  if(ent=="THORN") return "\xC3\x9E";
  if(ent=="thorn") return "\xC3\xBE";
  if(ent=="Tilde") return "\xE2\x88\xBC";
  if(ent=="tilde") return "\xCB\x9C";
  if(ent=="TildeEqual") return "\xE2\x89\x83";
  if(ent=="TildeFullEqual") return "\xE2\x89\x85";
  if(ent=="TildeTilde") return "\xE2\x89\x88";
  if(ent=="times") return "\xC3\x97";
  if(ent=="timesb") return "\xE2\x8A\xA0";
  if(ent=="timesbar") return "\xE2\xA8\xB1";
  if(ent=="timesd") return "\xE2\xA8\xB0";
  if(ent=="tint") return "\xE2\x88\xAD";
  if(ent=="toea") return "\xE2\xA4\xA8";
  if(ent=="top") return "\xE2\x8A\xA4";
  if(ent=="topbot") return "\xE2\x8C\xB6";
  if(ent=="topcir") return "\xE2\xAB\xB1";
  if(ent=="Topf") return "\xED\xA0\xB5\xED\xB5\x8B";
  if(ent=="topf") return "\xED\xA0\xB5\xED\xB5\xA5";
  if(ent=="topfork") return "\xE2\xAB\x9A";
  if(ent=="tosa") return "\xE2\xA4\xA9";
  if(ent=="tprime") return "\xE2\x80\xB4";
  if(ent=="TRADE") return "\xE2\x84\xA2";
  if(ent=="trade") return "\xE2\x84\xA2";
  if(ent=="triangle") return "\xE2\x96\xB5";
  if(ent=="triangledown") return "\xE2\x96\xBF";
  if(ent=="triangleleft") return "\xE2\x97\x83";
  if(ent=="trianglelefteq") return "\xE2\x8A\xB4";
  if(ent=="triangleq") return "\xE2\x89\x9C";
  if(ent=="triangleright") return "\xE2\x96\xB9";
  if(ent=="trianglerighteq") return "\xE2\x8A\xB5";
  if(ent=="tridot") return "\xE2\x97\xAC";
  if(ent=="trie") return "\xE2\x89\x9C";
  if(ent=="triminus") return "\xE2\xA8\xBA";
  if(ent=="TripleDot") return "\xE2\x83\x9B";
  if(ent=="triplus") return "\xE2\xA8\xB9";
  if(ent=="trisb") return "\xE2\xA7\x8D";
  if(ent=="tritime") return "\xE2\xA8\xBB";
  if(ent=="trpezium") return "\xE2\x8F\xA2";
  if(ent=="Tscr") return "\xED\xA0\xB5\xED\xB2\xAF";
  if(ent=="tscr") return "\xED\xA0\xB5\xED\xB3\x89";
  if(ent=="TScy") return "\xD0\xA6";
  if(ent=="tscy") return "\xD1\x86";
  if(ent=="TSHcy") return "\xD0\x8B";
  if(ent=="tshcy") return "\xD1\x9B";
  if(ent=="Tstrok") return "\xC5\xA6";
  if(ent=="tstrok") return "\xC5\xA7";
  if(ent=="twixt") return "\xE2\x89\xAC";
  if(ent=="twoheadleftarrow") return "\xE2\x86\x9E";
  if(ent=="twoheadrightarrow") return "\xE2\x86\xA0";
  if(ent=="Uacute") return "\xC3\x9A";
  if(ent=="uacute") return "\xC3\xBA";
  if(ent=="Uarr") return "\xE2\x86\x9F";
  if(ent=="uArr") return "\xE2\x87\x91";
  if(ent=="uarr") return "\xE2\x86\x91";
  if(ent=="Uarrocir") return "\xE2\xA5\x89";
  if(ent=="Ubrcy") return "\xD0\x8E";
  if(ent=="ubrcy") return "\xD1\x9E";
  if(ent=="Ubreve") return "\xC5\xAC";
  if(ent=="ubreve") return "\xC5\xAD";
  if(ent=="Ucirc") return "\xC3\x9B";
  if(ent=="ucirc") return "\xC3\xBB";
  if(ent=="Ucy") return "\xD0\xA3";
  if(ent=="ucy") return "\xD1\x83";
  if(ent=="udarr") return "\xE2\x87\x85";
  if(ent=="Udblac") return "\xC5\xB0";
  if(ent=="udblac") return "\xC5\xB1";
  if(ent=="udhar") return "\xE2\xA5\xAE";
  if(ent=="ufisht") return "\xE2\xA5\xBE";
  if(ent=="Ufr") return "\xED\xA0\xB5\xED\xB4\x98";
  if(ent=="ufr") return "\xED\xA0\xB5\xED\xB4\xB2";
  if(ent=="Ugrave") return "\xC3\x99";
  if(ent=="ugrave") return "\xC3\xB9";
  if(ent=="uHar") return "\xE2\xA5\xA3";
  if(ent=="uharl") return "\xE2\x86\xBF";
  if(ent=="uharr") return "\xE2\x86\xBE";
  if(ent=="uhblk") return "\xE2\x96\x80";
  if(ent=="ulcorn") return "\xE2\x8C\x9C";
  if(ent=="ulcorner") return "\xE2\x8C\x9C";
  if(ent=="ulcrop") return "\xE2\x8C\x8F";
  if(ent=="ultri") return "\xE2\x97\xB8";
  if(ent=="Umacr") return "\xC5\xAA";
  if(ent=="umacr") return "\xC5\xAB";
  if(ent=="uml") return "\xC2\xA8";
  if(ent=="UnderBar") return "_";
  if(ent=="UnderBrace") return "\xE2\x8F\x9F";
  if(ent=="UnderBracket") return "\xE2\x8E\xB5";
  if(ent=="UnderParenthesis") return "\xE2\x8F\x9D";
  if(ent=="Union") return "\xE2\x8B\x83";
  if(ent=="UnionPlus") return "\xE2\x8A\x8E";
  if(ent=="Uogon") return "\xC5\xB2";
  if(ent=="uogon") return "\xC5\xB3";
  if(ent=="Uopf") return "\xED\xA0\xB5\xED\xB5\x8C";
  if(ent=="uopf") return "\xED\xA0\xB5\xED\xB5\xA6";
  if(ent=="UpArrow") return "\xE2\x86\x91";
  if(ent=="Uparrow") return "\xE2\x87\x91";
  if(ent=="uparrow") return "\xE2\x86\x91";
  if(ent=="UpArrowBar") return "\xE2\xA4\x92";
  if(ent=="UpArrowDownArrow") return "\xE2\x87\x85";
  if(ent=="UpDownArrow") return "\xE2\x86\x95";
  if(ent=="Updownarrow") return "\xE2\x87\x95";
  if(ent=="updownarrow") return "\xE2\x86\x95";
  if(ent=="UpEquilibrium") return "\xE2\xA5\xAE";
  if(ent=="upharpoonleft") return "\xE2\x86\xBF";
  if(ent=="upharpoonright") return "\xE2\x86\xBE";
  if(ent=="uplus") return "\xE2\x8A\x8E";
  if(ent=="UpperLeftArrow") return "\xE2\x86\x96";
  if(ent=="UpperRightArrow") return "\xE2\x86\x97";
  if(ent=="Upsi") return "\xCF\x92";
  if(ent=="upsi") return "\xCF\x85";
  if(ent=="upsih") return "\xCF\x92";
  if(ent=="Upsilon") return "\xCE\xA5";
  if(ent=="upsilon") return "\xCF\x85";
  if(ent=="UpTee") return "\xE2\x8A\xA5";
  if(ent=="UpTeeArrow") return "\xE2\x86\xA5";
  if(ent=="upuparrows") return "\xE2\x87\x88";
  if(ent=="urcorn") return "\xE2\x8C\x9D";
  if(ent=="urcorner") return "\xE2\x8C\x9D";
  if(ent=="urcrop") return "\xE2\x8C\x8E";
  if(ent=="Uring") return "\xC5\xAE";
  if(ent=="uring") return "\xC5\xAF";
  if(ent=="urtri") return "\xE2\x97\xB9";
  if(ent=="Uscr") return "\xED\xA0\xB5\xED\xB2\xB0";
  if(ent=="uscr") return "\xED\xA0\xB5\xED\xB3\x8A";
  if(ent=="utdot") return "\xE2\x8B\xB0";
  if(ent=="Utilde") return "\xC5\xA8";
  if(ent=="utilde") return "\xC5\xA9";
  if(ent=="utri") return "\xE2\x96\xB5";
  if(ent=="utrif") return "\xE2\x96\xB4";
  if(ent=="uuarr") return "\xE2\x87\x88";
  if(ent=="Uuml") return "\xC3\x9C";
  if(ent=="uuml") return "\xC3\xBC";
  if(ent=="uwangle") return "\xE2\xA6\xA7";
  if(ent=="vangrt") return "\xE2\xA6\x9C";
  if(ent=="varepsilon") return "\xCF\xB5";
  if(ent=="varkappa") return "\xCF\xB0";
  if(ent=="varnothing") return "\xE2\x88\x85";
  if(ent=="varphi") return "\xCF\x95";
  if(ent=="varpi") return "\xCF\x96";
  if(ent=="varpropto") return "\xE2\x88\x9D";
  if(ent=="vArr") return "\xE2\x87\x95";
  if(ent=="varr") return "\xE2\x86\x95";
  if(ent=="varrho") return "\xCF\xB1";
  if(ent=="varsigma") return "\xCF\x82";
  if(ent=="varsubsetneq") return "\xE2\x8A\x8A\xEF\xB8\x80";
  if(ent=="varsubsetneqq") return "\xE2\xAB\x8B\xEF\xB8\x80";
  if(ent=="varsupsetneq") return "\xE2\x8A\x8B\xEF\xB8\x80";
  if(ent=="varsupsetneqq") return "\xE2\xAB\x8C\xEF\xB8\x80";
  if(ent=="vartheta") return "\xCF\x91";
  if(ent=="vartriangleleft") return "\xE2\x8A\xB2";
  if(ent=="vartriangleright") return "\xE2\x8A\xB3";
  if(ent=="Vbar") return "\xE2\xAB\xAB";
  if(ent=="vBar") return "\xE2\xAB\xA8";
  if(ent=="vBarv") return "\xE2\xAB\xA9";
  if(ent=="Vcy") return "\xD0\x92";
  if(ent=="vcy") return "\xD0\xB2";
  if(ent=="VDash") return "\xE2\x8A\xAB";
  if(ent=="Vdash") return "\xE2\x8A\xA9";
  if(ent=="vDash") return "\xE2\x8A\xA8";
  if(ent=="vdash") return "\xE2\x8A\xA2";
  if(ent=="Vdashl") return "\xE2\xAB\xA6";
  if(ent=="Vee") return "\xE2\x8B\x81";
  if(ent=="vee") return "\xE2\x88\xA8";
  if(ent=="veebar") return "\xE2\x8A\xBB";
  if(ent=="veeeq") return "\xE2\x89\x9A";
  if(ent=="vellip") return "\xE2\x8B\xAE";
  if(ent=="Verbar") return "\xE2\x80\x96";
  if(ent=="verbar") return "|";
  if(ent=="Vert") return "\xE2\x80\x96";
  if(ent=="vert") return "|";
  if(ent=="VerticalBar") return "\xE2\x88\xA3";
  if(ent=="VerticalLine") return "|";
  if(ent=="VerticalSeparator") return "\xE2\x9D\x98";
  if(ent=="VerticalTilde") return "\xE2\x89\x80";
  if(ent=="VeryThinSpace") return "\xE2\x80\x8A";
  if(ent=="Vfr") return "\xED\xA0\xB5\xED\xB4\x99";
  if(ent=="vfr") return "\xED\xA0\xB5\xED\xB4\xB3";
  if(ent=="vltri") return "\xE2\x8A\xB2";
  if(ent=="vnsub") return "\xE2\x8A\x82\xE2\x83\x92";
  if(ent=="vnsup") return "\xE2\x8A\x83\xE2\x83\x92";
  if(ent=="Vopf") return "\xED\xA0\xB5\xED\xB5\x8D";
  if(ent=="vopf") return "\xED\xA0\xB5\xED\xB5\xA7";
  if(ent=="vprop") return "\xE2\x88\x9D";
  if(ent=="vrtri") return "\xE2\x8A\xB3";
  if(ent=="Vscr") return "\xED\xA0\xB5\xED\xB2\xB1";
  if(ent=="vscr") return "\xED\xA0\xB5\xED\xB3\x8B";
  if(ent=="vsubnE") return "\xE2\xAB\x8B\xEF\xB8\x80";
  if(ent=="vsubne") return "\xE2\x8A\x8A\xEF\xB8\x80";
  if(ent=="vsupnE") return "\xE2\xAB\x8C\xEF\xB8\x80";
  if(ent=="vsupne") return "\xE2\x8A\x8B\xEF\xB8\x80";
  if(ent=="Vvdash") return "\xE2\x8A\xAA";
  if(ent=="vzigzag") return "\xE2\xA6\x9A";
  if(ent=="Wcirc") return "\xC5\xB4";
  if(ent=="wcirc") return "\xC5\xB5";
  if(ent=="wedbar") return "\xE2\xA9\x9F";
  if(ent=="Wedge") return "\xE2\x8B\x80";
  if(ent=="wedge") return "\xE2\x88\xA7";
  if(ent=="wedgeq") return "\xE2\x89\x99";
  if(ent=="weierp") return "\xE2\x84\x98";
  if(ent=="Wfr") return "\xED\xA0\xB5\xED\xB4\x9A";
  if(ent=="wfr") return "\xED\xA0\xB5\xED\xB4\xB4";
  if(ent=="Wopf") return "\xED\xA0\xB5\xED\xB5\x8E";
  if(ent=="wopf") return "\xED\xA0\xB5\xED\xB5\xA8";
  if(ent=="wp") return "\xE2\x84\x98";
  if(ent=="wr") return "\xE2\x89\x80";
  if(ent=="wreath") return "\xE2\x89\x80";
  if(ent=="Wscr") return "\xED\xA0\xB5\xED\xB2\xB2";
  if(ent=="wscr") return "\xED\xA0\xB5\xED\xB3\x8C";
  if(ent=="xcap") return "\xE2\x8B\x82";
  if(ent=="xcirc") return "\xE2\x97\xAF";
  if(ent=="xcup") return "\xE2\x8B\x83";
  if(ent=="xdtri") return "\xE2\x96\xBD";
  if(ent=="Xfr") return "\xED\xA0\xB5\xED\xB4\x9B";
  if(ent=="xfr") return "\xED\xA0\xB5\xED\xB4\xB5";
  if(ent=="xhArr") return "\xE2\x9F\xBA";
  if(ent=="xharr") return "\xE2\x9F\xB7";
  if(ent=="Xi") return "\xCE\x9E";
  if(ent=="xi") return "\xCE\xBE";
  if(ent=="xlArr") return "\xE2\x9F\xB8";
  if(ent=="xlarr") return "\xE2\x9F\xB5";
  if(ent=="xmap") return "\xE2\x9F\xBC";
  if(ent=="xnis") return "\xE2\x8B\xBB";
  if(ent=="xodot") return "\xE2\xA8\x80";
  if(ent=="Xopf") return "\xED\xA0\xB5\xED\xB5\x8F";
  if(ent=="xopf") return "\xED\xA0\xB5\xED\xB5\xA9";
  if(ent=="xoplus") return "\xE2\xA8\x81";
  if(ent=="xotime") return "\xE2\xA8\x82";
  if(ent=="xrArr") return "\xE2\x9F\xB9";
  if(ent=="xrarr") return "\xE2\x9F\xB6";
  if(ent=="Xscr") return "\xED\xA0\xB5\xED\xB2\xB3";
  if(ent=="xscr") return "\xED\xA0\xB5\xED\xB3\x8D";
  if(ent=="xsqcup") return "\xE2\xA8\x86";
  if(ent=="xuplus") return "\xE2\xA8\x84";
  if(ent=="xutri") return "\xE2\x96\xB3";
  if(ent=="xvee") return "\xE2\x8B\x81";
  if(ent=="xwedge") return "\xE2\x8B\x80";
  if(ent=="Yacute") return "\xC3\x9D";
  if(ent=="yacute") return "\xC3\xBD";
  if(ent=="YAcy") return "\xD0\xAF";
  if(ent=="yacy") return "\xD1\x8F";
  if(ent=="Ycirc") return "\xC5\xB6";
  if(ent=="ycirc") return "\xC5\xB7";
  if(ent=="Ycy") return "\xD0\xAB";
  if(ent=="ycy") return "\xD1\x8B";
  if(ent=="yen") return "\xC2\xA5";
  if(ent=="Yfr") return "\xED\xA0\xB5\xED\xB4\x9C";
  if(ent=="yfr") return "\xED\xA0\xB5\xED\xB4\xB6";
  if(ent=="YIcy") return "\xD0\x87";
  if(ent=="yicy") return "\xD1\x97";
  if(ent=="Yopf") return "\xED\xA0\xB5\xED\xB5\x90";
  if(ent=="yopf") return "\xED\xA0\xB5\xED\xB5\xAA";
  if(ent=="Yscr") return "\xED\xA0\xB5\xED\xB2\xB4";
  if(ent=="yscr") return "\xED\xA0\xB5\xED\xB3\x8E";
  if(ent=="YUcy") return "\xD0\xAE";
  if(ent=="yucy") return "\xD1\x8E";
  if(ent=="Yuml") return "\xC5\xB8";
  if(ent=="yuml") return "\xC3\xBF";
  if(ent=="Zacute") return "\xC5\xB9";
  if(ent=="zacute") return "\xC5\xBA";
  if(ent=="Zcaron") return "\xC5\xBD";
  if(ent=="zcaron") return "\xC5\xBE";
  if(ent=="Zcy") return "\xD0\x97";
  if(ent=="zcy") return "\xD0\xB7";
  if(ent=="Zdot") return "\xC5\xBB";
  if(ent=="zdot") return "\xC5\xBC";
  if(ent=="zeetrf") return "\xE2\x84\xA8";
  if(ent=="ZeroWidthSpace") return "\xE2\x80\x8B";
  if(ent=="Zeta") return "\xCE\x96";
  if(ent=="zeta") return "\xCE\xB6";
  if(ent=="Zfr") return "\xE2\x84\xA8";
  if(ent=="zfr") return "\xED\xA0\xB5\xED\xB4\xB7";
  if(ent=="ZHcy") return "\xD0\x96";
  if(ent=="zhcy") return "\xD0\xB6";
  if(ent=="zigrarr") return "\xE2\x87\x9D";
  if(ent=="Zopf") return "\xE2\x84\xA4";
  if(ent=="zopf") return "\xED\xA0\xB5\xED\xB5\xAB";
  if(ent=="Zscr") return "\xED\xA0\xB5\xED\xB2\xB5";
  if(ent=="zscr") return "\xED\xA0\xB5\xED\xB3\x8F";
  if(ent=="zwj") return "\xE2\x80\x8D";
  if(ent=="zwnj") return "\xE2\x80\x8C";

  // If an invalid entity was given, just return empty string
  return "";
}

#endif
